{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u6982\u8981","text":"<p>\u3053\u306e\u30b5\u30a4\u30c8\u306f\u79c1\u304cCUDA C++ Programming Guide\u3092\u8aad\u3093\u3067\u81ea\u8eab\u304c\u7406\u89e3\u3067\u304d\u308b\u3088\u3046\u52a0\u7b46\u4fee\u6b63\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3067\u3059\u3002</p> <p>\u9593\u9055\u3063\u3066\u3044\u308b\u7b87\u6240\u306e\u6307\u6458\u3084\u8a18\u4e8b\u306e\u8ffd\u52a0\u306a\u3069\u3068\u3044\u3063\u305f\u30b3\u30f3\u30c8\u30ea\u30d3\u30e5\u30fc\u30b7\u30e7\u30f3\u306f\u5927\u6b53\u8fce\u3067\u3059\u3002</p>"},{"location":"programming_model/","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb","text":"<p>\u3053\u306e\u7ae0\u3067\u306f\u3001CUDA\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb\u306e\u80cc\u5f8c\u306b\u3042\u308b\u4e3b\u306a\u6982\u5ff5\u3092\u7d39\u4ecb\u3059\u308b\u3002 \u8a73\u7d30\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u3066\u3002 \u3053\u306e\u7ae0\u3067\u4f7f\u308f\u308c\u308b\u3001\u30d9\u30af\u30c8\u30eb\u52a0\u7b97\u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3053\u306b\u3042\u308b\u3002</p>"},{"location":"programming_model/#\u30ab\u30fc\u30cd\u30eb","title":"\u30ab\u30fc\u30cd\u30eb","text":"<p>CUDA C++\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30de\u30fc\u304c\u30ab\u30fc\u30cd\u30eb\u3068\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u5b9a\u7fa9\u3067\u304d\u308b\u3088\u3046\u306bC++\u3092\u62e1\u5f35\u3057\u3066\u3044\u308b\u3002\u30ab\u30fc\u30cd\u30eb\u306f\u547c\u3073\u51fa\u3055\u308c\u305f\u6642\u3001\u666e\u901a\u306e\u95a2\u6570\u304c1\u5ea6\u3057\u304b\u5b9f\u884c\u3055\u308c\u306a\u3044\u306e\u306b\u5bfe\u3057\u3066\u3001N\u500b\u306eCUDA\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u3063\u3066\u4e26\u5217\u306bN\u56de\u5b9f\u884c\u3055\u308c\u308b\u3002</p> <p>\u30ab\u30fc\u30cd\u30eb\u306f<code>__global__</code>\u5ba3\u8a00\u6307\u5b9a\u5b50\u3092\u4f7f\u3063\u3066\u5b9a\u7fa9\u3055\u308c\u3001\u30ab\u30fc\u30cd\u30eb\u547c\u3073\u51fa\u3057\u306b\u5bfe\u3057\u3066\u305d\u306e\u30ab\u30fc\u30cd\u30eb\u3092\u5b9f\u884c\u3059\u308bCUDA\u30b9\u30ec\u30c3\u30c9\u306e\u6570\u306f\u65b0\u3057\u3044\u5b9f\u884c\u8a2d\u5b9a\u69cb\u6587<code>&lt;&lt;&lt;...&gt;&gt;&gt;</code>\u3092\u4f7f\u3063\u3066\u6307\u5b9a\u3055\u308c\u308b (\u8a73\u3057\u304f\u306fC++\u306e\u62e1\u5f35\u306b\u3066)\u3002\u30ab\u30fc\u30cd\u30eb\u3092\u5b9f\u884c\u3059\u308b\u5404\u30b9\u30ec\u30c3\u30c9\u306f\u7d44\u307f\u8fbc\u307f\u5909\u6570\u3092\u901a\u3057\u3066\u30ab\u30fc\u30cd\u30eb\u5185\u3067\u4f7f\u3048\u308b\u4e00\u610f\u306a\u30b9\u30ec\u30c3\u30c9ID\u3092\u4e0e\u3048\u3089\u308c\u308b\u3002</p> <p>\u4f8b\u3068\u3057\u3066\u3001\u7d44\u307f\u8fbc\u307f\u5909\u6570<code>threadIdx</code>\u3092\u4f7f\u3046\u4ee5\u4e0b\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306f\u30b5\u30a4\u30ba\u304cN\u306e2\u3064\u306e\u30d9\u30af\u30c8\u30ebA\u3068B\u3092\u8db3\u3057\u3001\u7d50\u679c\u3092\u30d9\u30af\u30c8\u30ebC\u306b\u5165\u308c\u308b\u3002</p> <pre><code>// Kernel definition\n__global__ void VecAdd(float* A, float* B, float* C)\n{\n    int i = threadIdx.x;\n    C[i] = A[i] + B[i];\n}\n\nint main()\n{\n    ...\n    // Kernel invocation with N threads\n    VecAdd&lt;&lt;&lt;1, N&gt;&gt;&gt;(A, B, C);\n    ...\n}\n</code></pre> <p>\u3053\u3053\u3067\u3001<code>VecAdd()</code>\u3092\u5b9f\u884c\u3059\u308bN\u500b\u306e\u30b9\u30ec\u30c3\u30c9\u306f\u8981\u7d20\u6bce\u306e\u8db3\u3057\u7b97\u3092\u884c\u3046\u3002</p>"},{"location":"programming_model/#\u30b9\u30ec\u30c3\u30c9\u968e\u5c64","title":"\u30b9\u30ec\u30c3\u30c9\u968e\u5c64","text":"<p>\u4fbf\u5229\u306a\u305f\u3081\u3001<code>threadIdx</code>\u306f3\u6b21\u5143\u306e\u30d9\u30af\u30c8\u30eb\u3068\u3057\u3066\u3044\u308b\u3002\u7d50\u679c\u3068\u3057\u3066\u3001\u30b9\u30ec\u30c3\u30c9\u306f1\u6b21\u5143\u30012\u6b21\u5143\u30013\u6b21\u5143\u306e\u30b9\u30ec\u30c3\u30c9\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u4f7f\u3063\u3066\u8b58\u5225\u3055\u308c\u3001\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u3068\u547c\u3070\u308c\u308b\u30b9\u30ec\u30c3\u30c9\u306e1\u6b21\u5143\u30012\u6b21\u5143\u30013\u6b21\u5143\u306e\u30d6\u30ed\u30c3\u30af\u3092\u5f62\u6210\u3059\u308b\u3002</p> <p>\u30b9\u30ec\u30c3\u30c9\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u305d\u306e\u30b9\u30ec\u30c3\u30c9ID\u306f\u4ee5\u4e0b\u306e\u8868\u306e\u3088\u3046\u306b\u95a2\u4fc2\u3057\u3066\u3044\u308b\u3002</p> \u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba \u30b9\u30ec\u30c3\u30c9\u30a4\u30f3\u30c7\u30c3\u30af\u30b9 \u30b9\u30ec\u30c3\u30c9ID (Dx) (x) x (Dx, Dy) (x, y) x + y * Dx (Dx, Dy, Dz) (x, y, z) x + y * Dx + z * Dx * Dy <p>\u4f8b\u3068\u3057\u3066\u3001\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u30b5\u30a4\u30ba\u304cN * N\u306e2\u3064\u306e\u884c\u5217\u3092\u8db3\u3057\u3066\u3001\u7d50\u679c\u3092\u884c\u5217C\u306b\u5165\u308c\u308b\u3002</p> <pre><code>// Kernel definition\n__global__ void MatAdd(float A[N][N], float B[N][N],\n                       float C[N][N])\n{\n    int i = threadIdx.x;\n    int j = threadIdx.y;\n    C[i][j] = A[i][j] + B[i][j];\n}\n\nint main()\n{\n    ...\n    // Kernel invocation with one block of N * N * 1 threads\n    int numBlocks = 1;\n    dim3 threadsPerBlock(N, N);\n    MatAdd&lt;&lt;&lt;numBlocks, threadsPerBlock&gt;&gt;&gt;(A, B, C);\n    ...\n}\n</code></pre> <p>\u30d6\u30ed\u30c3\u30af\u306e\u3059\u3079\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u306f\u540c\u3058\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u4e0a\u306b\u3042\u308b\u3068\u671f\u5f85\u3055\u308c\u3066\u3044\u3066\u3001\u305d\u306e\u30b3\u30a2\u306e\u9650\u3089\u308c\u305f\u30e1\u30e2\u30ea\u3092\u5171\u6709\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u305f\u3081\u3001\u30d6\u30ed\u30c3\u30af\u3042\u305f\u308a\u306e\u30b9\u30ec\u30c3\u30c9\u6570\u306b\u306f\u5236\u9650\u304c\u3042\u308b\u3002\u73fe\u5728\u306eGPU\u3067\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u6700\u5927\u30b9\u30ec\u30c3\u30c9\u6570\u306f1024\u3067\u3042\u308b\u3002</p> <p>\u30ab\u30fc\u30cd\u30eb\u306f\u8907\u6570\u306e\u540c\u3058\u5f62\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306b\u3088\u3063\u3066\u5b9f\u884c\u3055\u308c\u308b\u305f\u3081\u3001\u30b9\u30ec\u30c3\u30c9\u306e\u7dcf\u6570\u306f(\u30d6\u30ed\u30c3\u30af\u3042\u305f\u308a\u306e\u30b9\u30ec\u30c3\u30c9\u6570) x (\u30d6\u30ed\u30c3\u30af\u6570)\u3068\u7b49\u3057\u3044\u3002</p> <p>\u30d6\u30ed\u30c3\u30af\u306f\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u3001\u30b9\u30ec\u30c3\u30c9\u306e\u30d6\u30ed\u30c3\u30af\u306e1\u6b21\u5143\u30012\u6b21\u5143\u30013\u6b21\u5143\u306e\u30b0\u30ea\u30c3\u30c9\u306b\u7d71\u5408\u3055\u308c\u3066\u3044\u308b\u3002</p> <p> \u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u30b0\u30ea\u30c3\u30c9</p> <p><code>&lt;&lt;&lt;...&gt;&gt;&gt;</code>\u3067\u6307\u5b9a\u3055\u308c\u305f\u3001\u30d6\u30ed\u30c3\u30af\u3042\u305f\u308a\u306e\u30b9\u30ec\u30c3\u30c9\u6570\u3068\u30b0\u30ea\u30c3\u30c9\u3042\u305f\u308a\u306e\u30d6\u30ed\u30c3\u30af\u6570\u306e\u578b\u306f<code>int</code>\u307e\u305f\u306f<code>dim3</code>\u3067\u3042\u308b\u30022\u6b21\u5143\u306e\u30d6\u30ed\u30c3\u30af\u307e\u305f\u306f\u30b0\u30ea\u30c3\u30c9\u306f\u4e0a\u306e\u4f8b\u3067\u6307\u5b9a\u3055\u308c\u3066\u3044\u308b\u3002</p> <p>\u30b0\u30ea\u30c3\u30c9\u5185\u306e\u5404\u30d6\u30ed\u30c3\u30af\u306f\u7d44\u307f\u8fbc\u307f\u5909\u6570<code>blockIdx</code>\u3092\u901a\u3057\u3066\u30ab\u30fc\u30cd\u30eb\u5185\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30011\u6b21\u5143\u30012\u6b21\u5143\u30013\u6b21\u5143\u306e\u4e00\u610f\u306a\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u3088\u3063\u3066\u8b58\u5225\u3055\u308c\u308b\u3002\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u6b21\u5143\u306f\u7d44\u307f\u8fbc\u307f\u5909\u6570<code>blockDim</code>\u3092\u901a\u3057\u3066\u30ab\u30fc\u30cd\u30eb\u5185\u3067\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002</p> <p>\u524d\u306e<code>MatAdd()</code>\u306e\u4f8b\u3092\u8907\u6570\u306e\u30d6\u30ed\u30c3\u30af\u3092\u6271\u3046\u3088\u3046\u62e1\u5f35\u3059\u308b\u3068\u3001\u30b3\u30fc\u30c9\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002</p> <pre><code>// Kernel definition\n__global__ void MatAdd(float A[N][N], float B[N][N],\nfloat C[N][N])\n{\n    int i = blockIdx.x * blockDim.x + threadIdx.x;\n    int j = blockIdx.y * blockDim.y + threadIdx.y;\n    if (i &lt; N &amp;&amp; j &lt; N)\n        C[i][j] = A[i][j] + B[i][j];\n}\n\nint main()\n{\n    ...\n    // Kernel invocation\n    dim3 threadsPerBlock(16, 16);\n    dim3 numBlocks(N / threadsPerBlock.x, N / threadsPerBlock.y);\n    MatAdd&lt;&lt;&lt;numBlocks, threadsPerBlock&gt;&gt;&gt;(A, B, C);\n    ...\n}\n</code></pre> <p>(\u3053\u306e\u5834\u5408\u306f\u4efb\u610f\u3060\u304c) 16 * 16 \u500b\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306f\u3088\u304f\u3042\u308b\u9078\u629e\u3067\u3042\u308b\u3002\u3053\u306e\u30b0\u30ea\u30c3\u30c9\u306f\u4ee5\u524d\u306e\u3088\u3046\u306b\u884c\u5217\u306e\u8981\u7d20\u3042\u305f\u308a1\u3064\u306e\u30b9\u30ec\u30c3\u30c9\u3092\u6301\u3064\u306e\u306b\u5341\u5206\u306a\u30d6\u30ed\u30c3\u30af\u3068\u4e00\u7dd2\u306b\u4f5c\u3089\u308c\u3066\u3044\u308b\u3002\u5358\u7d14\u306b\u3059\u308b\u305f\u3081\u306b\u3001\u3053\u306e\u4f8b\u3067\u306f\u5404\u6b21\u5143\u306e\u30b0\u30ea\u30c3\u30c9\u3042\u305f\u308a\u306e\u30b9\u30ec\u30c3\u30c9\u6570\u306f\u305d\u306e\u6b21\u5143\u306e\u30d6\u30ed\u30c3\u30af\u3042\u305f\u308a\u306e\u30b9\u30ec\u30c3\u30c9\u6570\u3067\u5272\u308c\u308b\u3068\u4eee\u5b9a\u3057\u3066\u3044\u308b\u304c\u3001\u305d\u306e\u5fc5\u8981\u306f\u306a\u3044\u3002</p> <p>\u5f8c\u8ff0\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f7f\u308f\u306a\u3044\u5834\u5408\u3001\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306f\u9806\u4e0d\u540c\u3067\u3001\u4e26\u5217\u307e\u305f\u306f\u9010\u6b21\u7684\u306b\u5b9f\u884c\u3067\u304d\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> <p>\u30d6\u30ed\u30c3\u30af\u5185\u306e\u30b9\u30ec\u30c3\u30c9\u306f<code>__syncthreads()</code>\u3068\u3044\u3046\u95a2\u6570\u3092\u4f7f\u3046\u3068\u540c\u671f\u3067\u304d\u308b\u3002\u3064\u307e\u308a\u3001\u30d6\u30ed\u30c3\u30af\u5185\u306e\u5404\u30b9\u30ec\u30c3\u30c9\u306f\u30d6\u30ed\u30c3\u30af\u5185\u306e\u5168\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u304c<code>__syncthreads()</code>\u3092\u5b9f\u884c\u3059\u308b\u307e\u3067\u5f85\u305f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> <p>\u5171\u6709\u30e1\u30e2\u30ea\u306b\u306f\u5171\u6709\u30e1\u30e2\u30ea\u3092\u4f7f\u3063\u305f\u4f8b\u304c\u3042\u308a\u3001Cooperative Groups API\u306b\u306f\u540c\u671f\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u3092\u7ba1\u7406\u3059\u308bAPI\u304c\u66f8\u304b\u308c\u3066\u3044\u308b\u3002</p>"},{"location":"programming_model/#\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc","title":"\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc","text":"<p>Compute Capability 9.0\u304b\u3089\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u3068\u3044\u3046\u3001\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u304b\u3089\u69cb\u6210\u3055\u308c\u305f\u3001\u7701\u7565\u53ef\u80fd\u306a\u30b9\u30ec\u30c3\u30c9\u968e\u5c64\u304c\u5c0e\u5165\u3055\u308c\u305f\u3002\u30af\u30e9\u30b9\u30bf\u30fc\u3067\u306f\u3001\u8907\u6570\u306e\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u3067\u4e26\u5217\u306b\u52d5\u4f5c\u3059\u308b\u8907\u6570\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u3092\u540c\u671f\u3055\u305b\u3001\u5171\u540c\u3067\u30c7\u30fc\u30bf\u306e\u53d6\u5f97\u3084\u4ea4\u63db\u3092\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b<sup>1</sup>\u3002\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u3068\u540c\u69d8\u306b\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u30821\u6b21\u5143\u307e\u305f\u306f2\u6b21\u5143\u30013\u6b21\u5143\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u3002\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u6570\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u6c7a\u3081\u3089\u308c\u3001\u30dd\u30fc\u30bf\u30d6\u30eb\u306a\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u3068\u3057\u3066\u6700\u59278\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u304c\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u3066\u3044\u308b\u3002<code>cudaOccupancyMaxPotentialClusterSize</code>\u95a2\u6570\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3082\u51fa\u6765\u308b\u3002</p> <p> \u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u30b0\u30ea\u30c3\u30c9</p> <p>\u6ce8</p> <p>\u4e92\u63db\u6027\u304b\u3089\u3001<code>gridDim</code>\u5909\u6570\u306f\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u6570\u306e\u610f\u5473\u3067\u306e\u30b5\u30a4\u30ba\u3092\u8868\u3057\u3066\u3044\u308b\u3002\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u306e\u30d6\u30ed\u30c3\u30af\u306e\u30e9\u30f3\u30af\u306f\u30af\u30e9\u30b9\u30bf\u30fc\u30b0\u30eb\u30fc\u30d7API\u3092\u4f7f\u3046\u3068\u5f97\u3089\u308c\u308b\u3002</p> <p>\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u306f<code>__cluster_dims__(X,Y,Z)</code>\u3068\u3044\u3046\u30ab\u30fc\u30cd\u30eb\u5c5e\u6027\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u6709\u52b9\u306b\u3057\u305f\u308a\u3001<code>cudaLaunchKernelEx</code>\u3068\u3044\u3046CUDA\u30ab\u30fc\u30cd\u30eb\u3092\u5b9f\u884c\u3059\u308b\u95a2\u6570\u3092\u4f7f\u3063\u3066\u5b9f\u884c\u6642\u306b\u6709\u52b9\u306b\u3057\u305f\u308a\u51fa\u6765\u308b\u3002</p> <p>\u4ee5\u4e0b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u30ab\u30fc\u30cd\u30eb\u5c5e\u6027\u3092\u4f7f\u3063\u305f\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u306e\u4f7f\u3044\u65b9\u306e\u4f8b\u3067\u3042\u308b\u3002 \u30b3\u30f3\u30d1\u30a4\u30eb\u6642\u306b\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\u3068\u3001\u30ab\u30fc\u30cd\u30eb\u8d77\u52d5\u6642\u306b\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3067\u304d\u306a\u3044\u3002</p> <pre><code>// Kernel definition\n// Compile time cluster size 2 in X-dimension and 1 in Y and Z dimension\n__global__ void __cluster_dims__(2, 1, 1) cluster_kernel(float *input, float* output)\n{\n\n}\n\nint main()\n{\n    float *input, *output;\n    // Kernel invocation with compile time cluster size\n    dim3 threadsPerBlock(16, 16);\n    dim3 numBlocks(N / threadsPerBlock.x, N / threadsPerBlock.y);\n\n    // The grid dimension is not affected by cluster launch, and is still enumerated\n    // using number of blocks.\n    // The grid dimension must be a multiple of cluster size.\n    cluster_kernel&lt;&lt;&lt;numBlocks, threadsPerBlock&gt;&gt;&gt;(input, output);\n}\n</code></pre> <p>\u307e\u305f\u3001\u4ee5\u4e0b\u306f\u5b9f\u884c\u6642\u306b\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u3092\u6307\u5b9a\u3059\u308b\u4f8b\u3067\u3042\u308b\u3002</p> <pre><code>// Kernel definition\n// No compile time attribute attached to the kernel\n__global__ void cluster_kernel(float *input, float* output)\n{\n\n}\n\nint main()\n{\n    float *input, *output;\n    dim3 threadsPerBlock(16, 16);\n    dim3 numBlocks(N / threadsPerBlock.x, N / threadsPerBlock.y);\n\n    // Kernel invocation with runtime cluster size\n    {\n        cudaLaunchConfig_t config = {0};\n        // The grid dimension is not affected by cluster launch, and is still enumerated\n        // using number of blocks.\n        // The grid dimension should be a multiple of cluster size.\n        config.gridDim = numBlocks;\n        config.blockDim = threadsPerBlock;\n\n        cudaLaunchAttribute attribute[1];\n        attribute[0].id = cudaLaunchAttributeClusterDimension;\n        attribute[0].val.clusterDim.x = 2; // Cluster size in X-dimension\n        attribute[0].val.clusterDim.y = 1;\n        attribute[0].val.clusterDim.z = 1;\n        config.attrs = attribute;\n        config.numAttrs = 1;\n\n        cudaLaunchKernelEx(&amp;config, cluster_kernel, input, output);\n    }\n}\n</code></pre> <p>\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f7f\u3046\u3068\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306f\u5168\u3066\u4e00\u7dd2\u306b\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u30b0\u30eb\u30fc\u30d7API\u306e<code>cluster.sync()</code>\u3092\u4f7f\u3063\u3066\u540c\u671f\u3067\u304d\u308b\u3002\u307e\u305f\u3001\u30af\u30e9\u30b9\u30bf\u30fc\u30b0\u30eb\u30fc\u30d7\u306f\u30b9\u30ec\u30c3\u30c9\u6570\u3084\u30d6\u30ed\u30c3\u30af\u6570\u306e\u610f\u5473\u3067\u30af\u30e9\u30b9\u30bf\u30fc\u30b0\u30eb\u30fc\u30d7\u306e\u30b5\u30a4\u30ba\u3092\u5f97\u308b<code>num_thread()</code>\u3084<code>num_blocks()</code>\u3068\u3044\u3063\u305f\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002</p> <p>\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306f\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3078\u306e\u8aad\u307f\u66f8\u304d\u3068\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3048\u308b\u3002\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u306b\u306f\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3067\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u8a08\u7b97\u3059\u308b\u4f8b\u304c\u8f09\u3063\u3066\u3044\u308b\u3002</p>"},{"location":"programming_model/#\u30e1\u30e2\u30ea\u968e\u5c64","title":"\u30e1\u30e2\u30ea\u968e\u5c64","text":"<p>CUDA\u30b9\u30ec\u30c3\u30c9\u306f\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u3001\u5b9f\u884c\u4e2d\u306b\u8907\u6570\u306e\u30e1\u30e2\u30ea\u7a7a\u9593\u306e\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002</p> <ul> <li>\u5404\u30b9\u30ec\u30c3\u30c9\u306f\u30d7\u30e9\u30a4\u30d9\u30fc\u30c8\u306a\u30ed\u30fc\u30ab\u30eb\u30e1\u30e2\u30ea\u3092\u6301\u3064\u3002</li> <li>\u5404\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306f\u30d6\u30ed\u30c3\u30af\u5185\u306e\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3001\u30d6\u30ed\u30c3\u30af\u3068\u540c\u3058\u751f\u5b58\u671f\u9593\u3092\u6301\u3064\u5171\u6709\u30e1\u30e2\u30ea\u3092\u6301\u3064\u3002</li> <li>\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306f\u304a\u4e92\u3044\u306e\u5171\u6709\u30e1\u30e2\u30ea\u3078\u306e\u8aad\u307f\u66f8\u304d\u3068\u6392\u4ed6\u5236\u5fa1\u3092\u884c\u3048\u308b\u3002</li> <li>\u3059\u3079\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u306f\u540c\u3058\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3002</li> </ul> <p>\u307e\u305f\u3001\u5b9a\u6570\u3068\u30c6\u30af\u30b9\u30c1\u30e3\u30e1\u30e2\u30ea\u7a7a\u9593\u306f\u5168\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3001\u8aad\u307f\u8fbc\u307f\u5c02\u7528\u30e1\u30e2\u30ea\u3067\u3042\u308b\u3002\u30b0\u30ed\u30fc\u30d0\u30eb\u3001\u5b9a\u6570\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30e1\u30e2\u30ea\u7a7a\u9593\u306f\u7570\u306a\u308b\u30e1\u30e2\u30ea\u4f7f\u7528\u6cd5\u306b\u5bfe\u3057\u3066\u6700\u9069\u5316\u3055\u308c\u3066\u3044\u308b (\u8a73\u3057\u304f\u306f\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306b\u3066)\u3002\u30c6\u30af\u30b9\u30c1\u30e3\u30e1\u30e2\u30ea\u306f\u7279\u5b9a\u306e\u30c7\u30fc\u30bf\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306b\u5bfe\u3057\u3066\u7570\u306a\u308b\u30a2\u30c9\u30ec\u30c3\u30b7\u30f3\u30b0\u30e2\u30fc\u30c9\u3068\u30c7\u30fc\u30bf\u30d5\u30a3\u30eb\u30bf\u30ea\u30f3\u30b0\u3082\u63d0\u4f9b\u3057\u3066\u3044\u308b (\u8a73\u3057\u304f\u306f\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u30b5\u30fc\u30d5\u30a7\u30b9\u30e1\u30e2\u30ea\u306b\u3066)\u3002</p> <p>\u30b0\u30ed\u30fc\u30d0\u30eb\u3001\u5b9a\u6570\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u30e1\u30e2\u30ea\u7a7a\u9593\u306f\u540c\u3058\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u308b\u30ab\u30fc\u30cd\u30eb\u306e\u5b9f\u884c\u4e2d\u3001\u6301\u7d9a\u3059\u308b\u3002</p> <p> \u30e1\u30e2\u30ea\u968e\u5c64</p>"},{"location":"programming_model/#\u30d8\u30c6\u30ed\u30b8\u30cb\u30a2\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0","title":"\u30d8\u30c6\u30ed\u30b8\u30cb\u30a2\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0","text":"<p>\u4ee5\u4e0b\u306e\u56f3\u306b\u793a\u3059\u3088\u3046\u306b\u3001CUDA\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb\u306fCUDA\u30b9\u30ec\u30c3\u30c9\u304c\u7269\u7406\u7684\u306b\u5206\u3051\u3089\u308c\u305f\u3001\u30db\u30b9\u30c8\u306b\u4ed8\u968f\u3059\u308b\u30c7\u30d0\u30a4\u30b9\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u306f\u4f8b\u3048\u3070\u3001\u30ab\u30fc\u30cd\u30eb\u304cGPU\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u3066\u3001CPU\u4e0a\u3067C++\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u6b8b\u308a\u3092\u5b9f\u884c\u3059\u308b\u6642\u3067\u3042\u308b\u3002</p> <p>CUDA\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb\u306f\u30db\u30b9\u30c8\u3068\u30c7\u30d0\u30a4\u30b9\u306e\u4e21\u65b9\u304c\u305d\u308c\u305e\u308c\u81ea\u8eab\u306e\u30e1\u30e2\u30ea\u7a7a\u9593\u3092DRAM\u306e\u4e2d\u306b\u6301\u3064\u3053\u3068\u3082\u4eee\u5b9a\u3057\u3066\u3044\u308b\u3002\u3053\u308c\u3089\u306e\u30e1\u30e2\u30ea\u306f\u305d\u308c\u305e\u308c\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u3068\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u3068\u8a00\u308f\u308c\u308b\u3002\u5f93\u3063\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306fCUDA\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u547c\u3073\u51fa\u3057\u3092\u901a\u3057\u3066\u3001\u30ab\u30fc\u30cd\u30eb\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u30b0\u30ed\u30fc\u30d0\u30eb\u3001\u5b9a\u6570\u3001\u30c6\u30af\u30b9\u30c1\u30e3\u306e\u30e1\u30e2\u30ea\u7a7a\u9593\u3092\u7ba1\u7406\u3059\u308b (\u8a73\u3057\u304f\u306f\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306b\u3066)\u3002\u3053\u308c\u306f\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u3068\u89e3\u653e\u3001\u30db\u30b9\u30c8\u3068\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u9593\u306e\u30c7\u30fc\u30bf\u8ee2\u9001\u3082\u542b\u3080\u3002</p> <p>\u30e6\u30cb\u30d5\u30a1\u30a4\u30c9\u30e1\u30e2\u30ea\u3068\u547c\u3070\u308c\u308b\u3001\u30db\u30b9\u30c8\u3068\u30c7\u30d0\u30a4\u30b9\u306e\u4e21\u65b9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3067\u304d\u308b\u3001\u5358\u4e00\u306e\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3082\u3042\u308b\u3002\u3053\u306e\u30e1\u30e2\u30ea\u3092\u4f7f\u3046\u3068\u3001CPU\u3068GPU\u306e\u4e21\u65b9\u304b\u3089\u30a2\u30af\u30bb\u30b9\u3055\u308c\u308b\u30c7\u30fc\u30bf\u306e\u30e1\u30e2\u30ea\u78ba\u4fdd\u3084\u30a2\u30af\u30bb\u30b9\u304c\u3068\u3066\u3082\u7c21\u5358\u306b\u306a\u308b\u3002\u8a73\u3057\u304f\u306f\u30e6\u30cb\u30d5\u30a1\u30a4\u30c9\u30e1\u30e2\u30ea\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u3066\u3002</p> <p> \u30d8\u30c6\u30ed\u30b8\u30cb\u30a2\u30b9\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0</p>"},{"location":"programming_model/#\u975e\u540c\u671fsimt\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb","title":"\u975e\u540c\u671fSIMT\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb","text":"<p>CUDA\u306e\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb\u3067\u306f\u3001\u30b9\u30ec\u30c3\u30c9\u306f\u8a08\u7b97\u3084\u30e1\u30e2\u30ea\u64cd\u4f5c\u3092\u884c\u3046\u6700\u3082\u4f4e\u30ec\u30d9\u30eb\u306a\u62bd\u8c61\u5316\u3067\u3042\u308b\u3002compute capability 8.0\u4ee5\u4e0a\u306e\u30c7\u30d0\u30a4\u30b9\u3067\u306f\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u3088\u308b\u9ad8\u901f\u306a\u30d0\u30ea\u30a2\u3084\u30e1\u30e2\u30ea\u30b3\u30d4\u30fc\u304c\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3002compute capability 7.0\u4ee5\u4e0a\u304c\u5fc5\u8981\u3002</p>"},{"location":"programming_model/#\u975e\u540c\u671f\u64cd\u4f5c","title":"\u975e\u540c\u671f\u64cd\u4f5c","text":"<p>\u975e\u540c\u671f\u64cd\u4f5c\u306fCUDA\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u3063\u3066\u958b\u59cb\u3055\u308c\u308b\u64cd\u4f5c\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3001\u307e\u308b\u3067\u4ed6\u306e\u30b9\u30ec\u30c3\u30c9\u306b\u3088\u3063\u3066\u884c\u308f\u308c\u308b\u3088\u3046\u306b\u975e\u540c\u671f\u306b\u5b9f\u884c\u3055\u308c\u308b\u3002\u6b63\u3057\u3044\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u4e00\u3064\u4ee5\u4e0a\u306eCUDA\u30b9\u30ec\u30c3\u30c9\u304c\u975e\u540c\u671f\u64cd\u4f5c\u3068\u540c\u671f\u3059\u308b\u3002\u975e\u540c\u671f\u64cd\u4f5c\u3092\u958b\u59cb\u3057\u305fCUDA\u30b9\u30ec\u30c3\u30c9\u306f\u540c\u671f\u3057\u3066\u3044\u308b\u30b9\u30ec\u30c3\u30c9\u306b\u542b\u307e\u308c\u308b\u5fc5\u8981\u306f\u306a\u3044\u3002</p> <p>\u975e\u540c\u671f\u306a\u30b9\u30ec\u30c3\u30c9\u306f\u5fc5\u305a\u975e\u540c\u671f\u64cd\u4f5c\u3092\u958b\u59cb\u3057\u305fCUDA\u30b9\u30ec\u30c3\u30c9\u306b\u7d10\u4ed8\u3044\u3066\u3044\u308b\u3002\u975e\u540c\u671f\u64cd\u4f5c\u306f\u64cd\u4f5c\u306e\u5b8c\u4e86\u3092\u540c\u671f\u3059\u308b\u305f\u3081\u306b\u540c\u671f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\u3002\u540c\u671f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f(\u4f8b\u3048\u3070<code>cuda::memcpy_async</code>\u306a\u3069\u3067)\u660e\u793a\u7684\u306b\u30e6\u30fc\u30b6\u30fc\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u308b\u304b\u3001(\u4f8b\u3048\u3070<code>cooperative_groups::memcpy_async</code>\u306a\u3069\u3067)\u6697\u9ed9\u306b\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u3088\u3063\u3066\u7ba1\u7406\u3055\u308c\u308b\u3002\u540c\u671f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u4f8b\u3068\u3057\u3066\u3001<code>cuda::barrier</code>\u3084<code>cuda::pipeline</code>\u304c\u3042\u308b\u3002\u8a73\u3057\u304f\u306f\u975e\u540c\u671f\u30d0\u30ea\u30a2\u3068cuda::pipeline\u3092\u4f7f\u3063\u305f\u975e\u540c\u671f\u306a\u30c7\u30fc\u30bf\u30b3\u30d4\u30fc\u306b\u3066\u3002</p> <p>\u3053\u308c\u3089\u306e\u540c\u671f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u7570\u306a\u308b\u30b9\u30ec\u30c3\u30c9\u30b9\u30b3\u30fc\u30d7\u3067\u4f7f\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u30b9\u30b3\u30fc\u30d7\u306f\u975e\u540c\u671f\u64cd\u4f5c\u3068\u540c\u671f\u3059\u308b\u305f\u3081\u306e\u540c\u671f\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f7f\u3046\u304b\u3082\u3057\u308c\u306a\u3044\u30b9\u30ec\u30c3\u30c9\u306e\u96c6\u5408\u3092\u5b9a\u7fa9\u3059\u308b\u3002 \u4ee5\u4e0b\u306e\u30c6\u30fc\u30d6\u30eb\u306fCUDA C++\u3067\u4f7f\u3048\u308b\u30b9\u30ec\u30c3\u30c9\u30b9\u30b3\u30fc\u30d7\u3068\u4e00\u7dd2\u306b\u540c\u671f\u3055\u308c\u308b\u30b9\u30ec\u30c3\u30c9\u3092\u5b9a\u7fa9\u3059\u308b\u3002</p> \u30b9\u30ec\u30c3\u30c9\u30b9\u30b3\u30fc\u30d7 \u540c\u671f\u5bfe\u8c61\u306eCUDA\u30b9\u30ec\u30c3\u30c9 <code>cuda::thread_scope::thread_scope_thread</code> \u975e\u540c\u671f\u64cd\u4f5c\u3092\u958b\u59cb\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u306e\u307f <code>cuda::thread_scope::thread_scope_block</code> \u958b\u59cb\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3068\u540c\u3058\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u5185\u306e\u4efb\u610f\u306e\u30b9\u30ec\u30c3\u30c9 <code>cuda::thread_scope::thread_scope_device</code> \u958b\u59cb\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3068\u540c\u3058GPU\u30c7\u30d0\u30a4\u30b9\u5185\u306e\u4efb\u610f\u306e\u30b9\u30ec\u30c3\u30c9 <code>cuda::thread_scope::thread_scope_system</code> \u958b\u59cb\u3057\u305f\u30b9\u30ec\u30c3\u30c9\u3068\u540c\u3058\u30b7\u30b9\u30c6\u30e0\u5185\u306e\u4efb\u610f\u306e\u30b9\u30ec\u30c3\u30c9 <p>\u3053\u308c\u3089\u306e\u30b9\u30ec\u30c3\u30c9\u30b9\u30b3\u30fc\u30d7\u306fCUDA\u6a19\u6e96C++\u30e9\u30a4\u30d6\u30e9\u30ea\u5185\u306e\u6a19\u6e96C++\u306e\u62e1\u5f35\u3068\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002</p>"},{"location":"programming_model/#compute-capability","title":"Compute Capability","text":"<p>\u30c7\u30d0\u30a4\u30b9\u306eCompute Capability\u306f\u6642\u3005\u3001\"\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30c3\u30b5\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\"(SM\u30d0\u30fc\u30b8\u30e7\u30f3)\u3068\u3082\u547c\u3070\u308c\u308b\u3001\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u306b\u3088\u3063\u3066\u8868\u3055\u308c\u308b\u3002\u3053\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u756a\u53f7\u306fGPU\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306b\u3088\u3063\u3066\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u7279\u5fb4\u3092\u8b58\u5225\u3057\u3001\u73fe\u5728\u306eGPU\u4e0a\u3067\u3069\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u7279\u5fb4\u3084\u547d\u4ee4\u304c\u4f7f\u3048\u308b\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u306b\u5b9f\u884c\u6642\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u3088\u3063\u3066\u4f7f\u308f\u308c\u308b\u3002</p> <p>compute capability\u306f\u30e1\u30b8\u30e3\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3X\u3068\u30de\u30a4\u30ca\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3Y\u304b\u3089\u306a\u308a\u3001X.Y\u3068\u8868\u3055\u308c\u308b\u3002\u540c\u3058\u30e1\u30b8\u30e3\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u3092\u6301\u3064\u30c7\u30d0\u30a4\u30b9\u306f\u540c\u3058\u30b3\u30a2\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u6301\u3064\u3002\u30de\u30a4\u30ca\u30fc\u30d0\u30fc\u30b8\u30e7\u30f3\u306f\u65b0\u3057\u3044\u7279\u5fb4\u3084\u30b3\u30a2\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u6539\u5584\u306b\u5bfe\u5fdc\u3059\u308b\u3002</p> <ol> <li> <p>NVIDIA Hopper \u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306e\u5fb9\u5e95\u89e3\u8aac \u21a9</p> </li> </ol>"},{"location":"programming_interface/","title":"\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9","text":"<p>CUDA\u30e9\u30f3\u30bf\u30a4\u30e0\u306f\u4f4e\u7d1a\u306aC API\u3067\u3042\u308bCUDA\u30c9\u30e9\u30a4\u30d0\u30fcAPI\u306e\u4e0a\u306b\u4f5c\u3089\u308c\u3066\u3044\u308b\u3002CUDA\u30c9\u30e9\u30a4\u30d0\u30fcAPI\u3082\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304b\u3089\u5229\u7528\u3067\u304d\u308b\u3002\u3053\u306eAPI\u306f\u3001</p> <ul> <li>CUDA\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8 - \u30db\u30b9\u30c8\u30d7\u30ed\u30bb\u30b9\u306e\u30c7\u30d0\u30a4\u30b9\u7248</li> <li>CUDA\u30e2\u30b8\u30e5\u30fc\u30eb - \u52d5\u7684\u30ea\u30f3\u30af\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u30c7\u30d0\u30a4\u30b9\u7248</li> </ul> <p>\u3068\u3044\u3063\u305f\u4f4e\u7d1a\u306a\u6982\u5ff5\u3092\u63d0\u4f9b\u3059\u308b\u3002\u8a73\u3057\u304f\u306f\u30c9\u30e9\u30a4\u30d0\u30fcAPI\u306b\u3066\u3002</p>"},{"location":"programming_interface/to_compile_with_nvcc/","title":"NVCC\u3092\u4f7f\u3063\u305f\u30b3\u30f3\u30d1\u30a4\u30eb","text":"<p>\u30ab\u30fc\u30cd\u30eb\u306fPTX\u3068\u547c\u3070\u308c\u308b\u3001CUDA\u306e\u547d\u4ee4\u30bb\u30c3\u30c8\u3092\u4f7f\u3063\u3066\u66f8\u304f\u3053\u3068\u3082\u3067\u304d\u308b\u3002\u3057\u304b\u3057\u3001\u666e\u901a\u306fC++\u306e\u3088\u3046\u306a\u9ad8\u7d1a\u8a00\u8a9e\u3092\u4f7f\u3063\u305f\u307b\u3046\u304c\u3088\u308a\u52b9\u7387\u7684\u3067\u3042\u308b\u3002\u3069\u3061\u3089\u306b\u3057\u308d\u3001\u30ab\u30fc\u30cd\u30eb\u306f<code>nvcc</code>\u3092\u4f7f\u3063\u3066\u30c7\u30d0\u30a4\u30b9\u4e0a\u3067\u5b9f\u884c\u3055\u308c\u308b\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002</p> <p><code>nvcc</code>\u306fC++\u3084PTX\u30b3\u30fc\u30c9\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u5358\u7d14\u306b\u3059\u308b\u30b3\u30f3\u30d1\u30a4\u30eb\u30c9\u30e9\u30a4\u30d0\u30fc\u3067\u3042\u308b\u3002\u3053\u308c\u306f\u5358\u7d14\u3067\u89aa\u3057\u307f\u6df1\u3044\u30b3\u30de\u30f3\u30c9\u3092\u63d0\u4f9b\u3057\u3001\u7570\u306a\u308b\u30b3\u30f3\u30d1\u30a4\u30eb\u30b9\u30c6\u30fc\u30b8\u3092\u5b9f\u88c5\u3059\u308b\u30c4\u30fc\u30eb\u3092\u547c\u3073\u51fa\u3057\u3066\u5b9f\u884c\u3059\u308b\u3002\u3053\u306e\u7bc0\u3067\u306f<code>nvcc</code>\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306e\u6982\u8981\u3068\u30b3\u30de\u30f3\u30c9\u30aa\u30d7\u30b7\u30e7\u30f3\u306e\u6982\u8981\u3092\u8ff0\u3079\u308b\u3002</p> <p>\u8a73\u3057\u304f\u306fNVIDIA CUDA Compiler Driver NVCC\u306b\u3066\u3002</p>"},{"location":"programming_interface/to_compile_with_nvcc/#\u30b3\u30f3\u30d1\u30a4\u30eb\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","title":"\u30b3\u30f3\u30d1\u30a4\u30eb\u30ef\u30fc\u30af\u30d5\u30ed\u30fc","text":""},{"location":"programming_interface/to_compile_with_nvcc/#\u30aa\u30d5\u30e9\u30a4\u30f3\u30b3\u30f3\u30d1\u30a4\u30eb","title":"\u30aa\u30d5\u30e9\u30a4\u30f3\u30b3\u30f3\u30d1\u30a4\u30eb","text":"<p><code>nvcc</code>\u306b\u3088\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u306f\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u3068\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3092\u542b\u307f\u3046\u308b\u3002<code>nvcc</code>\u306e\u57fa\u672c\u7684\u306a\u30ef\u30fc\u30af\u30d5\u30ed\u30fc\u306f</p> <ol> <li>\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u304b\u3089\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3092\u5206\u3051\u3001</li> <li>\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3092\u30a2\u30bb\u30f3\u30d6\u30ea\u5f62\u5f0f(PTX\u30b3\u30fc\u30c9)\u304b\u30d0\u30a4\u30ca\u30ea\u5f62\u5f0f(cubin\u30aa\u30d6\u30b8\u30a7\u30af\u30c8)\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u3001</li> <li>\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u30ab\u30fc\u30cd\u30eb\u306b\u6307\u5b9a\u3055\u308c\u305f<code>&lt;&lt;&lt;...&gt;&gt;&gt;</code>\u3092\u3001PTX\u30b3\u30fc\u30c9\u3084cubin\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30ab\u30fc\u30cd\u30eb\u3092\u8aad\u307f\u8fbc\u3093\u3067\u8d77\u52d5\u3059\u308b\u305f\u3081\u306b\u5fc5\u8981\u306aCUDA\u30e9\u30f3\u30bf\u30a4\u30e0\u95a2\u6570\u306e\u547c\u3073\u51fa\u3057\u306b\u7f6e\u304d\u63db\u3048\u308b</li> </ol> <p>\u3053\u3068\u3067\u3042\u308b\u3002</p> <p>\u4fee\u6b63\u3055\u308c\u305f\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u4ed6\u306e\u30c4\u30fc\u30eb\u3092\u4f7f\u3063\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3067\u304d\u308b\u3088\u3046\u306bC++\u30b3\u30fc\u30c9\u3068\u3057\u3066\u51fa\u529b\u3055\u308c\u308b\u304b\u3001\u6700\u5f8c\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u30b9\u30c6\u30fc\u30b8\u3067<code>nvcc</code>\u306b\u30db\u30b9\u30c8\u30b3\u30f3\u30d1\u30a4\u30e9\u3092\u547c\u3073\u51fa\u3055\u305b\u308b\u3053\u3068\u3067\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u30b3\u30fc\u30c9\u3068\u3057\u3066\u76f4\u63a5\u51fa\u529b\u3055\u308c\u308b\u3002</p> <p>\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3001</p> <ul> <li>\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u30ea\u30f3\u30af\u3059\u308b\u304b\u3001</li> <li>\u4fee\u6b63\u3055\u308c\u305f\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u3092\u7121\u8996\u3057\u3066\u3001PTX\u30b3\u30fc\u30c9\u304bcubin\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u30ed\u30fc\u30c9\u3057\u3001\u5b9f\u884c\u3059\u308b\u305f\u3081\u306bCUDA\u30c9\u30e9\u30a4\u30d0\u30fcAPI\u3092\u4f7f\u3046 (\u8a73\u3057\u304f\u306f\u30c9\u30e9\u30a4\u30d0\u30fcAPI\u306b\u3066)\u3002</li> </ul>"},{"location":"programming_interface/to_compile_with_nvcc/#just-in-time\u30b3\u30f3\u30d1\u30a4\u30eb","title":"Just-in-Time\u30b3\u30f3\u30d1\u30a4\u30eb","text":"<p>\u5b9f\u884c\u6642\u306b\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u30ed\u30fc\u30c9\u3055\u308c\u308bPTX\u30b3\u30fc\u30c9\u306f\u3001\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u3088\u3063\u3066\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3002\u3053\u308c\u306fjust-in-time\u30b3\u30f3\u30d1\u30a4\u30eb\u3068\u547c\u3070\u308c\u308b\u3002just-in-time\u30b3\u30f3\u30d1\u30a4\u30eb\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30ed\u30fc\u30c9\u30bf\u30a4\u30e0\u3092\u5897\u3084\u3059\u304c\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u65b0\u3057\u3044\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306e\u6539\u5584\u3092\u4eab\u53d7\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308b\u3002\u307e\u305f\u3001\u3053\u306e\u65b9\u6cd5\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u304c\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u6642\u306b\u5b58\u5728\u3057\u306a\u304b\u3063\u305f\u30c7\u30d0\u30a4\u30b9\u4e0a\u3067\u5b9f\u884c\u3059\u308b\u305f\u3081\u306e\u552f\u4e00\u306e\u65b9\u6cd5\u3067\u3042\u308b\u3002\u8a73\u3057\u304f\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4e92\u63db\u6027\u306b\u3066\u3002</p> <p>\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u30fc\u306f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306ePTX\u30b3\u30fc\u30c9\u3092just-in-time\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u6642\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u547c\u3073\u51fa\u3057\u6bce\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u306a\u3044\u3088\u3046\u306b\u3001\u751f\u6210\u3057\u305f\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u306e\u30b3\u30d4\u30fc\u3092\u81ea\u52d5\u7684\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u3002(compute cache\u3068\u547c\u3070\u308c\u308b)\u3053\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u30fc\u304c\u30a2\u30c3\u30d7\u30b0\u30ec\u30fc\u30c9\u3055\u308c\u305f\u6642\u306b\u81ea\u52d5\u7684\u306b\u7121\u52b9\u306b\u306a\u308b\u306e\u3067\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u30c7\u30d0\u30a4\u30b9\u30c9\u30e9\u30a4\u30d0\u30fc\u306b\u7d44\u307f\u8fbc\u307e\u308c\u305f\u65b0\u3057\u3044just-in-time\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u306e\u6539\u5584\u3092\u4eab\u53d7\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002</p> <p>\u74b0\u5883\u5909\u6570\u3092\u4f7f\u3046\u3068\u3001just-in-time\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3067\u304d\u308b\u3002\u8a73\u3057\u304f\u306fCUDA\u306e\u74b0\u5883\u5909\u6570\u306b\u3066\u3002</p> <p>CUDA C++\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u305f\u3081\u306b<code>nvcc</code>\u3092\u4f7f\u3046\u4ee3\u308f\u308a\u3068\u3057\u3066\u3001\u5b9f\u884c\u6642\u306bCUDA C++\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3092PTX\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308bNVRTC\u3092\u4f7f\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u3002NVRTC\u306fCUDA C++\u306e\u5b9f\u884c\u6642\u30b3\u30f3\u30d1\u30a4\u30eb\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002</p>"},{"location":"programming_interface/to_compile_with_nvcc/#\u30d0\u30a4\u30ca\u30ea\u4e92\u63db\u6027","title":"\u30d0\u30a4\u30ca\u30ea\u4e92\u63db\u6027","text":"<p>\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u306f\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u7279\u6709\u3067\u3042\u308b\u3002cubin\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306f\u5bfe\u8c61\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u6307\u5b9a\u3059\u308b\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u30aa\u30d7\u30b7\u30e7\u30f3<code>-code</code>\u3092\u4f7f\u3063\u3066\u751f\u6210\u3055\u308c\u308b\u3002\u4f8b\u3048\u3070\u3001<code>-code=sm_80</code>\u3092\u4ed8\u3051\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u3001compute capability 8.0\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3059\u308b\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u304c\u4f5c\u3089\u308c\u308b\u3002compute capability X.y\u306b\u5bfe\u3057\u3066\u751f\u6210\u3055\u308c\u305fcubin\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306fcompute capability X.z(z&gt;=y)\u306e\u30c7\u30d0\u30a4\u30b9\u4e0a\u3067\u3057\u304b\u5b9f\u884c\u3067\u304d\u306a\u3044\u3002</p> <p>\u6ce8</p> <p>\u30d0\u30a4\u30ca\u30ea\u4e92\u63db\u6027\u306f\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3059\u308b\u3002Tegra\u306b\u5bfe\u3057\u3066\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u305a\u3001\u30c7\u30b9\u30af\u30c8\u30c3\u30d7\u3068Tegra\u9593\u306e\u30d0\u30a4\u30ca\u30ea\u4e92\u63db\u6027\u3082\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u306a\u3044\u3002</p>"},{"location":"programming_interface/to_compile_with_nvcc/#ptx\u4e92\u63db\u6027","title":"PTX\u4e92\u63db\u6027","text":"<p>\u3044\u304f\u3064\u304b\u306ePTX\u547d\u4ee4\u306f\u9ad8\u3044compute capability\u3092\u6301\u3064\u30c7\u30d0\u30a4\u30b9\u4e0a\u3067\u3057\u304b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u306a\u3044\u3002\u4f8b\u3048\u3070\u3001warp\u30b7\u30e3\u30c3\u30d5\u30eb\u95a2\u6570\u306fcompute capability\u304c5.0\u4ee5\u4e0a\u306e\u30c7\u30d0\u30a4\u30b9\u4e0a\u3067\u3057\u304b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u306a\u3044\u3002<code>-arch</code>\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u306fC++\u3092PTX\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u6642\u306b\u5fc5\u8981\u306acompute capability\u3092\u6307\u5b9a\u3059\u308b\u3002\u4f8b\u3048\u3070\u3001warp\u30b7\u30e3\u30c3\u30d5\u30eb\u3092\u542b\u3080\u30b3\u30fc\u30c9\u306f<code>-arch=compute_50</code>(\u304b\u305d\u308c\u4ee5\u4e0a)\u3092\u4ed8\u3051\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> <p>\u3042\u308b\u7279\u5b9a\u306ecompute capability\u306b\u5bfe\u3057\u3066\u4f5c\u3089\u308c\u305fPTX\u30b3\u30fc\u30c9\u306f\u5fc5\u305a\u305d\u308c\u4ee5\u4e0a\u306ecompute capability\u3092\u6301\u3064\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308b\u3002\u4ee5\u524d\u306ePTX\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304b\u3089\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u306f\u3044\u304f\u3064\u304b\u306e\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u7279\u5fb4\u3092\u5229\u7528\u3057\u306a\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u306e\u3067\u3001\u6700\u7d42\u7684\u306a\u30d0\u30a4\u30ca\u30ea\u306f\u6700\u65b0\u306ePTX\u3092\u4f7f\u3063\u3066\u751f\u6210\u3055\u308c\u305f\u30d0\u30a4\u30ca\u30ea\u3088\u308a\u6027\u80fd\u304c\u60aa\u3044\u304b\u3082\u3057\u308c\u306a\u3044\u3002</p> <p>compute capability\u306f\u4eee\u60f3\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u3082\u547c\u3070\u308c\u3001\u30d7\u30ea\u30d7\u30ed\u30bb\u30b9\u3068PTX\u3078\u306e\u30b3\u30f3\u30d1\u30a4\u30eb\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u308b\u3002\u305d\u306e\u305f\u3081\u3001<code>-arch</code>\u30aa\u30d7\u30b7\u30e7\u30f3\u3060\u3051\u3092\u6307\u5b9a\u3057\u3066\u3082\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u3084\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f5c\u308c\u305a\u3001<code>-code</code>\u30aa\u30d7\u30b7\u30e7\u30f3\u3067\u7269\u7406\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3092\u6307\u5b9a\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p>"},{"location":"programming_interface/to_compile_with_nvcc/#\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4e92\u63db\u6027","title":"\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u4e92\u63db\u6027","text":"<p>\u7279\u5b9a\u306ecompute capability\u306e\u30c7\u30d0\u30a4\u30b9\u4e0a\u3067\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3053\u306ecompute capability\u3068\u4e92\u63db\u6027\u306e\u3042\u308b\u30d0\u30a4\u30ca\u30ea\u304bPTX\u30b3\u30fc\u30c9\u3092\u30ed\u30fc\u30c9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u7279\u306b\u3001\u9ad8\u3044compute capability\u3092\u6301\u3064\u3001\u5c06\u6765\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u4e0a\u3067\u30b3\u30fc\u30c9\u3092\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u3053\u308c\u3089\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3057\u3066just-in-time\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308bPTX\u30b3\u30fc\u30c9\u3092\u30ed\u30fc\u30c9\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> <p>\u3069\u306ePTX\u3068\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u304cCUDA C++\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306b\u57cb\u3081\u8fbc\u307e\u308c\u308b\u304b\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3<code>-arch</code>\u3068<code>-code</code>\u307e\u305f\u306f<code>gencode</code>\u306b\u3088\u3063\u3066\u5236\u5fa1\u3055\u308c\u308b\u3002\u4f8b\u3048\u3070\u3001</p> <pre><code>nvcc x.cu\n        -gencode arch=compute_50,code=sm_50\n        -gencode arch=compute_60,code=sm_60\n        -gencode arch=compute_70,code=\\\"compute_70,sm_70\\\"\n</code></pre> <p>\u3068\u3059\u308b\u3068\u3001\u6700\u521d\u30682\u756a\u76ee\u306e<code>-gencode</code>\u30aa\u30d7\u30b7\u30e7\u30f3\u304b\u3089compute capability 5.0\u30686.0\u306b\u4e92\u63db\u6027\u304c\u3042\u308b\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u3068\u30013\u756a\u76ee\u306e<code>-gencode</code>\u30aa\u30d7\u30b7\u30e7\u30f3\u304b\u3089compute capability 7.0\u3068\u4e92\u63db\u6027\u304c\u3042\u308bPTX\u3068\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u3092\u57cb\u3081\u8fbc\u3080\u3002</p> <p>\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u306f\u5b9f\u884c\u6642\u306b\u6700\u3082\u9069\u3057\u305f\u30b3\u30fc\u30c9\u3092\u81ea\u52d5\u7684\u306b\u9078\u3076\u3088\u3046\u751f\u6210\u3055\u308c\u308b\u3002\u4e0a\u306e\u4f8b\u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u306a\u308b\u3002</p> <ul> <li>compute capability 5.0\u30685.2\u3092\u6301\u3064\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3059\u308b5.0\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9</li> <li>compute capability 6.0\u30686.1\u3092\u6301\u3064\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3059\u308b6.0\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9</li> <li>compute capability 7.0\u30687.5\u3092\u6301\u3064\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3059\u308b7.0\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9</li> <li>compute capability\u304c8.0\u4ee5\u4e0a\u306e\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3059\u308b\u3001\u5b9f\u884c\u6642\u306b\u30d0\u30a4\u30ca\u30ea\u30b3\u30fc\u30c9\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u308bPTX\u30b3\u30fc\u30c9</li> </ul> <p>compute capability\u306b\u57fa\u3065\u3044\u305f\u69d8\u3005\u306a\u30b3\u30fc\u30c9\u30d1\u30b9\u3092\u533a\u5225\u3059\u308b\u305f\u3081\u306b<code>__CUDA_ARCH__</code>\u30de\u30af\u30ed\u3092\u4f7f\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u305f\u3060\u3057\u3001\u3053\u306e\u30de\u30af\u30ed\u306f\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3067\u306e\u307f\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002\u4f8b\u3048\u3070\u3001<code>-arch=compute_80</code>\u3092\u4ed8\u3051\u3066\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3068\u304d\u3001<code>__CUDA_ARCH__</code>\u306e\u5024\u306f<code>800</code>\u3067\u3042\u308b\u3002</p> <p>\u30c9\u30e9\u30a4\u30d0\u30fcAPI\u3092\u4f7f\u3046\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u5b9f\u884c\u6642\u306b\u6700\u9069\u306a\u30b3\u30fc\u30c9\u3092\u660e\u793a\u7684\u306b\u30ed\u30fc\u30c9\u3057\u5b9f\u884c\u3067\u304d\u308b\u3088\u3046\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> <p>\u4f8b\u3048\u3070\u3001Volta\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u306f\u30b9\u30ec\u30c3\u30c9\u304cGPU\u4e0a\u3067\u30b9\u30b1\u30b8\u30e5\u30fc\u30eb\u3055\u308c\u308b\u65b9\u6cd5\u3092\u5909\u3048\u308bIndependent Thread Scheduling\u3092\u5c0e\u5165\u3057\u3066\u3044\u308b\u304c\u3001\u4ee5\u524d\u306e\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u5185\u306eSIMT\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u306e\u7279\u5b9a\u306e\u632f\u308b\u821e\u3044\u306b\u4f9d\u5b58\u3059\u308b\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u3001Independent Thread Scheduling\u306f\u95a2\u4fc2\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u306e\u96c6\u5408\u3092\u5909\u3048\u308b\u304b\u3082\u3057\u308c\u305a\u3001\u4e0d\u6b63\u78ba\u306a\u7d50\u679c\u3092\u3082\u305f\u3089\u3059\u3002 Independent Thread Scheduling\u3092\u5b9f\u88c5\u3057\u3064\u3064\u79fb\u690d\u3059\u308b\u305f\u3081\u306b\u306f\u3001Volta\u958b\u767a\u8005\u306f\u30b3\u30f3\u30d1\u30a4\u30eb\u30aa\u30d7\u30b7\u30e7\u30f3<code>-arch=compute_60 -code=sm_70</code>\u3092\u3064\u3051\u3066Pascal\u306e\u30b9\u30ec\u30c3\u30c9\u30b9\u30b1\u30b8\u30e5\u30fc\u30ea\u30f3\u30b0\u306b\u6700\u9069\u5316\u3059\u308c\u3070\u3088\u3044\u3002</p> <p><code>nvcc</code>\u30e6\u30fc\u30b6\u30fc\u30de\u30cb\u30e5\u30a2\u30eb\u306f<code>-arch</code>\u3001<code>-code</code>\u3001<code>-gencode</code>\u30b3\u30f3\u30d1\u30a4\u30e9\u30fc\u30aa\u30d7\u30b7\u30e7\u30f3\u306b\u5bfe\u3059\u308b\u69d8\u3005\u306a\u77ed\u7e2e\u5f62\u3092\u30ea\u30b9\u30c8\u306b\u307e\u3068\u3081\u3066\u3044\u308b\u3002\u4f8b\u3048\u3070\u3001<code>-arch=sm_70</code>\u306f<code>-arch=compute_70 -code=compute_70,sm_70</code>\u306e\u7565\u3067\u3042\u308b\u3002</p>"},{"location":"programming_interface/to_compile_with_nvcc/#c\u4e92\u63db\u6027","title":"C++\u4e92\u63db\u6027","text":"<p>\u30b3\u30f3\u30d1\u30a4\u30e9\u306e\u30d5\u30ed\u30f3\u30c8\u30a8\u30f3\u30c9\u306fCUDA\u30bd\u30fc\u30b9\u30d5\u30a1\u30a4\u30eb\u3092C++\u306e\u6587\u6cd5\u306b\u5f93\u3063\u3066\u51e6\u7406\u3059\u308b\u3002\u5168\u3066\u306eC++\u306e\u6a5f\u80fd\u306f\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u306f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u304c\u3001\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u306f\u4e00\u90e8\u306e\u307f\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u308b\u3002\u8a73\u3057\u304f\u306fC++\u8a00\u8a9e\u30b5\u30dd\u30fc\u30c8\u306b\u3066\u3002</p>"},{"location":"programming_interface/to_compile_with_nvcc/#64\u30d3\u30c3\u30c8\u4e92\u63db\u6027","title":"64\u30d3\u30c3\u30c8\u4e92\u63db\u6027","text":"<p>64bit\u30d0\u30fc\u30b8\u30e7\u30f3\u306e<code>nvcc</code>\u306f64bit\u30e2\u30fc\u30c9(\u3064\u307e\u308a\u30dd\u30a4\u30f3\u30bf\u30fc\u304c64bit)\u3067\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3092\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u300264bit\u30e2\u30fc\u30c9\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u306f64bit\u30e2\u30fc\u30c9\u3067\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u30db\u30b9\u30c8\u30b3\u30fc\u30c9\u3067\u3057\u304b\u30b5\u30dd\u30fc\u30c8\u3055\u308c\u306a\u3044\u3002</p>"},{"location":"programming_interface/cuda_runtime/","title":"CUDA\u30e9\u30f3\u30bf\u30a4\u30e0","text":"<p>\u30e9\u30f3\u30bf\u30a4\u30e0\u306f<code>cudart</code>\u30e9\u30a4\u30d6\u30e9\u30ea\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u3066\u3001<code>cudart.lib</code>\u307e\u305f\u306f<code>libcudart.a</code>\u3092\u4f7f\u3063\u3066\u9759\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b\u304b\u3001<code>cudart.dll</code>\u307e\u305f\u306f<code>libcudart.so</code>\u3092\u4f7f\u3063\u3066\u52d5\u7684\u306b\u30ea\u30f3\u30af\u3059\u308b\u3002</p> <p><code>cudart</code>\u306e\u5168\u3066\u306e\u30a8\u30f3\u30c8\u30ea\u30fc\u30dd\u30a4\u30f3\u30c8\u306f<code>cuda</code>\u304b\u3089\u59cb\u307e\u308b\u3002</p> <p>\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u3067\u306f\u3001\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u306e\u7ba1\u7406\u306b\u4f7f\u308f\u308c\u308b\u95a2\u6570\u306e\u6982\u8981\u3092\u8ff0\u3079\u308b\u3002</p> <p>\u5171\u6709\u30e1\u30e2\u30ea\u3067\u306f\u3001\u6027\u80fd\u3092\u6700\u5927\u5316\u3059\u308b\u305f\u3081\u306b\u5171\u6709\u30e1\u30e2\u30ea\u306e\u4f7f\u3044\u65b9\u3092\u8ff0\u3079\u308b\u3002</p> <p>\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u30c9\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u3067\u306f\u3001\u30db\u30b9\u30c8\u3068\u30c7\u30d0\u30a4\u30b9\u9593\u306e\u30c7\u30fc\u30bf\u8ee2\u9001\u3092\u884c\u3046\u30ab\u30fc\u30cd\u30eb\u306e\u5b9f\u884c\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30c3\u30d7\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u308b\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u30c9\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u3092\u7d39\u4ecb\u3059\u308b\u3002</p> <p>\u975e\u540c\u671f\u4e26\u5217\u5b9f\u884c\u3067\u306f\u3001\u30b3\u30f3\u30bb\u30d7\u30c8\u3068\u3044\u308d\u3044\u308d\u306a\u30ec\u30d9\u30eb\u3067\u306e\u975e\u540c\u671f\u4e26\u5217\u5b9f\u884c\u3092\u884c\u3046\u305f\u3081\u306eAPI\u3092\u8ff0\u3079\u308b\u3002</p> <p>\u30de\u30eb\u30c1\u30c7\u30d0\u30a4\u30b9\u30b7\u30b9\u30c6\u30e0\u3067\u306f\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u30e2\u30c7\u30eb\u304c\u540c\u3058\u30db\u30b9\u30c8\u306b\u4ed8\u3051\u3089\u308c\u305f\u8907\u6570\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u6301\u3064\u30b7\u30b9\u30c6\u30e0\u306b\u3069\u306e\u3088\u3046\u306b\u62e1\u5f35\u3055\u308c\u308b\u304b\u3092\u8ff0\u3079\u308b\u3002</p> <p>\u30a8\u30e9\u30fc\u30c1\u30a7\u30c3\u30af\u3067\u306f\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306b\u3088\u3063\u3066\u767a\u751f\u3057\u305f\u30a8\u30e9\u30fc\u3092\u9069\u5207\u306b\u78ba\u8a8d\u3059\u308b\u65b9\u6cd5\u3092\u8ff0\u3079\u308b\u3002</p> <p>\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u3067\u306f\u3001CUDA C++\u30b3\u30fc\u30eb\u30b9\u30bf\u30c3\u30af\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u308b\u95a2\u6570\u3092\u8ff0\u3079\u308b\u3002</p> <p>\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u30b5\u30fc\u30d5\u30a7\u30b9\u30e1\u30e2\u30ea\u3067\u306f\u3001\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u5225\u306e\u65b9\u6cd5\u3092\u63d0\u4f9b\u3059\u308b\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u30b5\u30fc\u30d5\u30a7\u30b9\u30e1\u30e2\u30ea\u7a7a\u9593\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002\u3053\u308c\u3089\u306fGPU\u306e\u30c6\u30af\u30b9\u30c1\u30e3\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306e\u30b5\u30d6\u30bb\u30c3\u30c8\u3082\u63d0\u4f9b\u3059\u308b\u3002</p> <p>\u30b0\u30e9\u30d5\u30a3\u30c3\u30af\u3068\u306e\u76f8\u4e92\u904b\u7528\u6027\u3067\u306f\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u304cOpenGL\u3068Direct3D\u3068\u76f8\u4e92\u904b\u7528\u3059\u308b\u305f\u3081\u306b\u63d0\u4f9b\u3059\u308b\u3001\u3055\u307e\u3056\u307e\u306a\u95a2\u6570\u3092\u7d39\u4ecb\u3059\u308b\u3002</p>"},{"location":"programming_interface/cuda_runtime/device_memory/","title":"\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea","text":"<p>CUDA\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u30e2\u30c7\u30eb\u306f\u5404\u3005\u306e\u30e1\u30e2\u30ea\u3092\u6301\u3064\u30db\u30b9\u30c8\u3068\u30c7\u30d0\u30a4\u30b9\u304b\u3089\u306a\u308b\u30b7\u30b9\u30c6\u30e0\u3092\u4eee\u5b9a\u3057\u3066\u3044\u308b\u3002 \u30ab\u30fc\u30cd\u30eb\u306f\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u306e\u5916\u304b\u3089\u64cd\u4f5c\u3059\u308b\u306e\u3067\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u306f\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u3068\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u9593\u306e\u30c7\u30fc\u30bf\u8ee2\u9001\u3092\u884c\u3046\u95a2\u6570\u3060\u3051\u3067\u306a\u304f\u3001\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u3001\u89e3\u653e\u3001\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u5185\u306e\u30b3\u30d4\u30fc\u3092\u884c\u3046\u95a2\u6570\u3082\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002</p> <p>\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u306f\u7dda\u5f62\u30e1\u30e2\u30ea(linear memory)\u304bCUDA\u914d\u5217(CUDA array)\u306e\u3069\u3061\u3089\u304b\u3068\u3057\u3066\u78ba\u4fdd\u3055\u308c\u308b\u3002</p> <p>CUDA\u914d\u5217\u306f\u30c6\u30af\u30b9\u30c1\u30e3\u30d5\u30a7\u30c3\u30c1\u306e\u305f\u3081\u306b\u6700\u9069\u5316\u3055\u308c\u305f\u4e0d\u900f\u660e\u306a\u30e1\u30e2\u30ea\u30ec\u30a4\u30a2\u30a6\u30c8\u3067\u3042\u308b\u3002 \u8a73\u3057\u304f\u306f\u30c6\u30af\u30b9\u30c1\u30e3\u3068\u30b5\u30fc\u30d5\u30a7\u30b9\u30e1\u30e2\u30ea\u30fc\u306b\u3066\u3002</p> <p>\u7dda\u5f62\u30e1\u30e2\u30ea\u306f\u4e00\u3064\u306e\u7d71\u4e00\u3055\u308c\u305f\u30e1\u30e2\u30ea\u7a7a\u9593\u306b\u30a2\u30ed\u30b1\u30fc\u30c8\u3055\u308c\u308b\u3002 \u3064\u307e\u308a\u3001\u4f8b\u3048\u30702\u5206\u6728\u3084\u30ea\u30f3\u30af\u30ea\u30b9\u30c8\u3067\u3001\u5225\u3005\u306b\u30a2\u30ed\u30b1\u30fc\u30b7\u30e7\u30f3\u3055\u308c\u305f\u3082\u306e\u3092\u30dd\u30a4\u30f3\u30bf\u30fc\u3092\u901a\u3057\u3066\u304a\u4e92\u3044\u306b\u53c2\u7167\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002 \u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u306e\u5927\u304d\u3055\u306f\u30db\u30b9\u30c8\u30b7\u30b9\u30c6\u30e0(CPU)\u3068\u3001\u4f7f\u3063\u3066\u3044\u308bGPU\u306ecompute capability\u306b\u4f9d\u5b58\u3059\u308b\u3002</p> compute capability x86_64(AMD64) ARM64 &gt;= 6.0 (Pascal) up to 47bit up to 48bit &lt;= 5.3 (Maxwell) 40bit 40bit <p>\u7dda\u578b\u30e1\u30e2\u30ea\u306e\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593</p> <p>\u7dda\u5f62\u30e1\u30e2\u30ea\u306f\u4e00\u822c\u7684\u306b<code>cudaMalloc()</code>\u3092\u4f7f\u3063\u3066\u78ba\u4fdd\u3055\u308c\u3001<code>cudaFree()</code>\u3067\u89e3\u653e\u3055\u308c\u308b\u3002 \u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u3068\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u9593\u306e\u30c7\u30fc\u30bf\u8ee2\u9001\u306f<code>cudaMemcpy()</code>\u3092\u7528\u3044\u3066\u884c\u308f\u308c\u308b\u3053\u3068\u304c\u591a\u3044\u3002 \u30d9\u30af\u30c8\u30eb\u548c\u306e\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001\u30d9\u30af\u30c8\u30eb\u306f\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u304b\u3089\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u3078\u30b3\u30d4\u30fc\u3055\u308c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> /src/programming_interface/device_memory/add_2_vectors.cu<pre><code>#include &lt;cassert&gt;\n\n#include &lt;cuda_runtime.h&gt;\n\n// Device code\n__global__ void VecAdd(float* A, float* B, float* C, int N) {\n  int i = blockDim.x * blockIdx.x + threadIdx.x;\n  if (i &lt; N) {\n    C[i] = A[i] + B[i];\n  }\n}\n\nint main() {\n  constexpr int    N    = 1e6;\n  constexpr size_t size = N * sizeof(float);\n\n  // Allocate input vectors h_A and h_B in host memory\n  float* h_A = (float*)std::malloc(size);\n  float* h_B = (float*)std::malloc(size);\n  float* h_C = (float*)std::malloc(size);\n\n  // Initialize input vectors\n  for (int i = 0; i &lt; N; ++i) {\n    h_A[i] = i;\n  }\n\n  for (int i = 0; i &lt; N; ++i) {\n    h_B[i] = 2 * i;\n  }\n\n  // Allocate vectors in device memory\n  float* d_A;\n  cudaMalloc(&amp;d_A, size);\n  float* d_B;\n  cudaMalloc(&amp;d_B, size);\n  float* d_C;\n  cudaMalloc(&amp;d_C, size);\n\n  // Copy vectors from host memory to device memory\n  cudaMemcpy(d_A, h_A, size, cudaMemcpyHostToDevice);\n  cudaMemcpy(d_B, h_B, size, cudaMemcpyHostToDevice);\n\n  // Invoke kernel\n  int threadsPerBlock = 256;\n  int blocksPerGrid   = (N + threadsPerBlock - 1) / threadsPerBlock;\n  VecAdd&lt;&lt;&lt;blocksPerGrid, threadsPerBlock&gt;&gt;&gt;(d_A, d_B, d_C, N);\n\n  // Copy result from device memory to host memory\n  // h_C contains the result in host memory\n  cudaMemcpy(h_C, d_C, size, cudaMemcpyDeviceToHost);\n\n  // Check result\n  for (int i = 0; i &lt; N; ++i) {\n    assert(h_C[i] == 3 * i);\n  }\n\n  // Free device memory\n  cudaFree(d_A);\n  cudaFree(d_B);\n  cudaFree(d_C);\n\n  // Free host memory\n  std::free(h_A);\n  std::free(h_B);\n  std::free(h_C);\n}\n</code></pre> <p>\u7dda\u5f62\u30e1\u30e2\u30ea\u306fcudaMallocPitch\u3068cudaMalloc3D\u3092\u901a\u3057\u3066\u3082\u78ba\u4fdd\u51fa\u6765\u308b\u3002 \u3053\u308c\u3089\u306e\u95a2\u6570\u306f2\u6b21\u5143\u307e\u305f\u306f3\u6b21\u5143\u914d\u5217\u306e\u30e1\u30e2\u30ea\u78ba\u4fdd\u304c\u30a2\u30e9\u30a4\u30e1\u30f3\u30c8\u306e\u8981\u4ef6\u306b\u5408\u3046\u3088\u3046\u306b\u9069\u5207\u306b\u30d1\u30c7\u30a3\u30f3\u30b0\u3055\u308c\u308b\u3088\u3046\u306b\u3057\u305f\u3044\u3068\u304d\u306b\u304a\u3059\u3059\u3081\u3002 \u8a73\u3057\u304f\u306f\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u3066\u3002 \u8fd4\u3055\u308c\u305f\u30d4\u30c3\u30c1(pitch)(\u307e\u305f\u306f\u30b9\u30c8\u30e9\u30a4\u30c9(stride))\u306f\u914d\u5217\u8981\u7d20\u306b\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3088\u3046\u306b\u4f7f\u308f\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002 \u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u30b5\u30f3\u30d7\u30eb\u3067\u306f\u3001<code>column</code> * <code>row</code>\u306e2\u6b21\u5143\u914d\u5217\u3092\u30a2\u30ed\u30b1\u30fc\u30c8\u3057\u3001\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u5185\u3067\u914d\u5217\u4e0a\u3092\u30eb\u30fc\u30d7\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3059\u3002</p> /src/programming_interface/device_memory/add_2_matrices.cu<pre><code>#include &lt;cuda_runtime.h&gt;\n\n__device__ float&amp; at(float* M, std::size_t pitch, int row, int column) {\n  return *((float*)((char*)M + row * pitch) + column);\n}\n\n__global__ void MatrixAdd(\n    float*      A,\n    std::size_t pitch_A,\n    float*      B,\n    std::size_t pitch_B,\n    float*      C,\n    std::size_t pitch_C,\n    int         row,\n    int         column\n) {\n  int i = blockDim.x * blockIdx.x + threadIdx.x;\n  int j = blockDim.y * blockIdx.y + threadIdx.y;\n  if (i &lt; row and j &lt; column) {\n    at(C, pitch_C, i, j) = at(A, pitch_A, i, j) + at(B, pitch_B, i, j);\n  }\n}\n\ntemplate &lt;class T&gt;\nvoid AllocateMatrix(T** dev_ptr, std::size_t* pitch, int row, int column) {\n  auto e = cudaMallocPitch(dev_ptr, pitch, sizeof(T) * column, row);\n  assert(e == cudaSuccess);\n}\n\nvoid FreeMatrix(void* dev_ptr) {\n  auto e = cudaFree(dev_ptr);\n  assert(e == cudaSuccess);\n}\n</code></pre> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001\u8981\u7d20\u6570\u304c<code>width</code> * <code>height</code> * <code>depth</code>\u306e3\u6b21\u5143\u914d\u5217\u3092\u78ba\u4fdd\u3059\u308b\u30b3\u30fc\u30c9\u3067\u3042\u308b\u3002</p> /src/programming_interface/device_memory/add_2_tensors.cu<pre><code>#include &lt;cuda_runtime.h&gt;\n\n__device__ float&amp; at(cudaPitchedPtr devPitchedPtr, int height, int x, int y, int z) {\n  char*  devPtr     = (char*)(devPitchedPtr.ptr);\n  size_t pitch      = devPitchedPtr.pitch;\n  size_t slicePitch = pitch * height;\n  float* row        = (float*)(devPtr + z * slicePitch + y * pitch);\n  return row[x];\n}\n\n__global__ void TensorAdd(\n    cudaPitchedPtr A, cudaPitchedPtr B, cudaPitchedPtr C, int width, int height, int depth\n) {\n  int i = blockDim.x * blockIdx.x + threadIdx.x;\n  int j = blockDim.y * blockIdx.y + threadIdx.y;\n  int k = blockDim.z * blockIdx.z + threadIdx.z;\n  if (i &lt; width and j &lt; height and k &lt; depth) {\n    at(C, height, i, j, k) = at(A, height, i, j, k) + at(B, height, i, j, k);\n  }\n}\n\nvoid AllocateTensor(cudaPitchedPtr* devPitchedPtr, int width, int height, int depth) {\n  auto e = cudaMalloc3D(devPitchedPtr, make_cudaExtent(width * sizeof(float), height, depth));\n  assert(e == cudaSuccess);\n}\n\nvoid FreeTensor(void* dev_ptr) {\n  auto e = cudaFree(dev_ptr);\n  assert(e == cudaSuccess);\n}\n\nvoid CopyTensor(cudaPitchedPtr dst, cudaPitchedPtr src, int width, int height, int depth) {\n  cudaMemcpy3DParms myParms = {0};\n  myParms.srcPtr            = src;\n  myParms.dstPtr            = dst;\n  myParms.extent            = make_cudaExtent(width * sizeof(float), height, depth);\n  myParms.kind              = cudaMemcpyDefault;\n</code></pre> <p>\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u306f\u3001<code>cudaMalloc()</code>\u3067\u78ba\u4fdd\u3055\u308c\u305f\u7dda\u5f62\u30e1\u30e2\u30ea\u3084<code>cudaMallocPitch()</code>\u3084<code>cudaMalloc3D()</code>\u3067\u78ba\u4fdd\u3055\u308c\u305f\u7dda\u5f62\u30e1\u30e2\u30ea\u3001CUDA\u914d\u5217\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u307e\u305f\u306f\u5b9a\u6570\u30e1\u30e2\u30ea\u7a7a\u9593\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306b\u5bfe\u3057\u3066\u78ba\u4fdd\u3055\u308c\u305f\u30e1\u30e2\u30ea\u9593\u306e\u30b3\u30d4\u30fc\u306b\u4f7f\u308f\u308c\u308b\u95a2\u6570\u304c\u8272\u3005\u3042\u308b\u3002</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u3001\u30e9\u30f3\u30bf\u30a4\u30e0API\u3092\u4f7f\u3063\u305f\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u5909\u6570\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u69d8\u3005\u306a\u65b9\u6cd5\u3092\u793a\u3059\u3002</p> /src/programming_interface/device_memory/global_memory.cu<pre><code>\n</code></pre> <p><code>cudaGetSymbolAddress()</code>\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u7a7a\u9593\u3067\u5ba3\u8a00\u3055\u308c\u305f\u5909\u6570\u306b\u5bfe\u3057\u3066\u78ba\u4fdd\u3055\u308c\u305f\u30e1\u30e2\u30ea\u3092\u6307\u3059\u30a2\u30c9\u30ec\u30b9\u3092\u53d6\u308a\u51fa\u3059\u305f\u3081\u306b\u4f7f\u308f\u308c\u308b\u3002 \u4f8b\u306fUnderstanding of CUDA's cudaGetSymbolAddress\u306b\u3066\u3002 \u78ba\u4fdd\u3055\u308c\u305f\u30e1\u30e2\u30ea\u306e\u30b5\u30a4\u30ba\u306f<code>cudaGetSymbolSize()</code>\u3067\u5f97\u3089\u308c\u308b\u3002</p>"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/","title":"\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u306eL2\u30a2\u30af\u30bb\u30b9\u7ba1\u7406","text":"<p>CUDA\u30ab\u30fc\u30cd\u30eb\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u5185\u306e\u30c7\u30fc\u30bf\u9818\u57df\u306b\u7e70\u308a\u8fd4\u3057\u30a2\u30af\u30bb\u30b9\u3059\u308b\u3068\u304d\u3001\u305d\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306f\u6301\u7d9a\u3057\u3066\u3044\u308b(persisting)\u3068\u8003\u3048\u3089\u308c\u308b\u3002\u4e00\u65b9\u3067\u3001\u4e00\u56de\u3057\u304b\u30c7\u30fc\u30bf\u306b\u30a2\u30af\u30bb\u30b9\u3057\u306a\u3044\u306a\u3089\u3001\u305d\u306e\u3088\u3046\u306a\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306f\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u3068\u8003\u3048\u3089\u308c\u308b\u3002</p> <p>CUDA 11.0\u304b\u3089\u3001compute capability\u304c8.0\u4ee5\u4e0a\u306e\u30c7\u30d0\u30a4\u30b9\u306fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30c7\u30fc\u30bf\u306e\u6301\u7d9a\u6027\u306b\u5f71\u97ff\u3092\u4e0e\u3048\u308b\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u3053\u308c\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u3078\u306e\u9ad8\u3044\u5e2f\u57df\u5e45\u3068\u4f4e\u30ec\u30a4\u30c6\u30f3\u30b7\u306a\u30a2\u30af\u30bb\u30b9\u3092\u63d0\u4f9b\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002</p>"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/#\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306el2\u30ad\u30e3\u30c3\u30b7\u30e5","title":"\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306eL2\u30ad\u30e3\u30c3\u30b7\u30e5","text":"<p>L2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e00\u90e8\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u3078\u306e\u6301\u7d9a\u7684\u306a\u30c7\u30fc\u30bf\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306b\u53d6\u3063\u3066\u304a\u304f\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306f\u3053\u306e\u5206\u3051\u3089\u308c\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4e00\u90e8\u3092\u512a\u5148\u7684\u306b\u4f7f\u3048\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u3078\u306e\u901a\u5e38\u306e\u30a2\u30af\u30bb\u30b9\u3068\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u30a2\u30af\u30bb\u30b9\u306f\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u3067\u4f7f\u308f\u308c\u306a\u3044\u6642\u3060\u3051\u3057\u304b\u3001\u3053\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u3002</p> <p>\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306eL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba\u306f\u5236\u9650\u5185\u3067\u8abf\u6574\u3067\u304d\u308b\u3002</p> <pre><code>cudaGetDeviceProperties(&amp;prop, device_id);                \nsize_t size = min(int(prop.l2CacheSize * 0.75), prop.persistingL2CacheMaxSize);\ncudaDeviceSetLimit(cudaLimitPersistingL2CacheSize, size); /* set-aside 3/4 of L2 cache for persisting accesses or the max allowed*/ \n</code></pre> <p>GPU\u304c\u30de\u30eb\u30c1\u30a4\u30f3\u30b9\u30bf\u30f3\u30b9GPU(MIG)\u30e2\u30fc\u30c9\u306e\u5834\u5408\u306f\u3053\u306e\u6a5f\u80fd\u3092\u5229\u7528\u3067\u304d\u306a\u3044\u3002</p> <p>\u30de\u30eb\u30c1\u30d7\u30ed\u30bb\u30b9\u30b5\u30fc\u30d3\u30b9(MPS)\u3092\u4f7f\u3063\u3066\u3044\u308b\u6642\u3001\u5206\u3051\u3089\u308c\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba\u3092<code>cudaDeviceSetLimit</code>\u3067\u5909\u66f4\u3067\u304d\u306a\u3044\u3002\u305d\u306e\u4ee3\u308f\u308a\u306b\u3001\u3053\u306e\u30b5\u30a4\u30ba\u306f\u74b0\u5883\u5909\u6570<code>CUDA_DEVICE_DEFAULT_PERSISTING_L2_CACHE_PERCENTAGE_LIMIT</code>\u3092\u4f7f\u3063\u3066MPS\u30b5\u30fc\u30d0\u30fc\u306e\u7acb\u3061\u4e0a\u3052\u6642\u306b\u306e\u307f\u6307\u5b9a\u3067\u304d\u308b\u3002</p>"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/#\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306el2\u30ad\u30e3\u30c3\u30b7\u30e5\u30dd\u30ea\u30b7\u30fc","title":"\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306eL2\u30ad\u30e3\u30c3\u30b7\u30e5\u30dd\u30ea\u30b7\u30fc","text":"<p>\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u30a6\u30a3\u30f3\u30c9\u30a6\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u306e\u9023\u7d9a\u3057\u305f\u9818\u57df\u3068\u305d\u306e\u9818\u57df\u5185\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3059\u308bL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6301\u7d9a\u6027\u3092\u6307\u5b9a\u3059\u308b\u3002</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u4f8b\u306fCUDA\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f7f\u3063\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u3078\u306e\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u8a2d\u5b9a\u306e\u4ed5\u65b9\u3092\u793a\u3059\u3002</p> <p>CUDA Stream Example <pre><code>cudaStreamAttrValue stream_attribute;                                         // Stream level attributes data structure\nstream_attribute.accessPolicyWindow.base_ptr  = reinterpret_cast&lt;void*&gt;(ptr); // Global Memory data pointer\nstream_attribute.accessPolicyWindow.num_bytes = num_bytes;                    // Number of bytes for persistence access.\n                                                                              // (Must be less than cudaDeviceProp::accessPolicyMaxWindowSize)\nstream_attribute.accessPolicyWindow.hitRatio  = 0.6;                          // Hint for cache hit ratio\nstream_attribute.accessPolicyWindow.hitProp   = cudaAccessPropertyPersisting; // Type of access property on cache hit\nstream_attribute.accessPolicyWindow.missProp  = cudaAccessPropertyStreaming;  // Type of access property on cache miss.\n\n//Set the attributes to a CUDA stream of type cudaStream_t\ncudaStreamSetAttribute(stream, cudaStreamAttributeAccessPolicyWindow, &amp;stream_attribute);\n</code></pre></p> <p>\u3053\u306e\u5f8c\u306b\u30ab\u30fc\u30cd\u30eb\u304cCUDA\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u5b9f\u884c\u3057\u3066\u3044\u308b\u3068\u304d\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u306e<code>[ptr, ptr + num_byte)</code>\u5185\u306e\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u306e\u4ed6\u306e\u5834\u6240\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3088\u308aL2\u30ad\u30e3\u30c3\u30b7\u30e5\u5185\u3067\u6301\u7d9a\u3057\u3084\u3059\u304f\u306a\u308b\u3002</p> <p>\u4ee5\u4e0b\u306e\u4f8b\u306e\u3088\u3046\u306b\u3001L2\u6301\u7d9a\u6027\u306fCUDA\u30b0\u30e9\u30d5\u30ab\u30fc\u30cd\u30eb\u30ce\u30fc\u30c9\u306b\u5bfe\u3057\u3066\u3082\u8a2d\u5b9a\u3067\u304d\u308b\u3002</p> <pre><code>cudaKernelNodeAttrValue node_attribute;                                     // Kernel level attributes data structure\nnode_attribute.accessPolicyWindow.base_ptr  = reinterpret_cast&lt;void*&gt;(ptr); // Global Memory data pointer\nnode_attribute.accessPolicyWindow.num_bytes = num_bytes;                    // Number of bytes for persistence access.\n                                                                            // (Must be less than cudaDeviceProp::accessPolicyMaxWindowSize)\nnode_attribute.accessPolicyWindow.hitRatio  = 0.6;                          // Hint for cache hit ratio\nnode_attribute.accessPolicyWindow.hitProp   = cudaAccessPropertyPersisting; // Type of access property on cache hit\nnode_attribute.accessPolicyWindow.missProp  = cudaAccessPropertyStreaming;  // Type of access property on cache miss.\n\n//Set the attributes to a CUDA Graph Kernel node of type cudaGraphNode_t\ncudaGraphKernelNodeSetAttribute(node, cudaKernelNodeAttributeAccessPolicyWindow, &amp;node_attribute);\n</code></pre> <p><code>hitRatio</code>\u30d1\u30e9\u30e1\u30fc\u30bf\u306f<code>accessPolicyWindow</code>\u306e<code>num_bytes</code>\u307b\u3069\u306e\u30c7\u30fc\u30bf\u3092\u6301\u7d9a\u7684\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306b\u53d6\u3063\u3066\u304a\u3044\u305f\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u8f09\u305b\u308b\u5272\u5408\u3092\u8868\u3059\u3002</p> <p>\u4f8b\u3048\u3070\u3001\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u304c16KB\u3067\u3001<code>accessPolicyWindow</code>\u306e<code>num_bytes</code>\u304c32KB\u3068\u3059\u308b\u3002</p> <ul> <li><code>hitRatio</code>\u304c0.5\u306e\u6642\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306f\u30e9\u30f3\u30c0\u30e0\u306b32KB\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u304b\u308916KB\u3092\u9078\u3073\u3001\u305d\u308c\u3089\u3092\u6301\u7d9a\u3059\u308b\u3068\u6307\u5b9a\u3057\u3001\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3059\u308b\u3002</li> <li><code>hitRatio</code>\u304c1\u306e\u6642\u3001\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u306f32KB\u306e\u30a6\u30a3\u30f3\u30c9\u30a6\u5168\u4f53\u3092\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u30ad\u30e3\u30c3\u30b7\u30e5\u3057\u3088\u3046\u3068\u3059\u308b\u3002\u53d6\u3063\u3066\u304a\u3044\u305f\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u30a6\u30a3\u30f3\u30c9\u30a6\u3088\u308a\u5c0f\u3055\u3044\u306e\u3067\u3001\u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u306f32KB\u306e\u30c7\u30fc\u30bf\u306e\u5185\u3001\u6700\u3082\u6700\u8fd1\u306b\u4f7f\u308f\u308c\u305f16KB\u3092\u4fdd\u6301\u3059\u308b\u3088\u3046\u524a\u9664\u3055\u308c\u308b\u3002</li> </ul> <p>\u3042\u308b\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u304c\u6301\u7d9a\u7684\u304b\u3069\u3046\u304b\u306f<code>hitRatio</code>\u306e\u78ba\u7387\u3067\u30e9\u30f3\u30c0\u30e0\u3067\u3001\u78ba\u7387\u5206\u5e03\u306f\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u30a2\u30fc\u30ad\u30c6\u30af\u30c1\u30e3\u3068\u305d\u306e\u30e1\u30e2\u30ea\u30b5\u30a4\u30ba\u306b\u4f9d\u5b58\u3059\u308b\u3002</p> <p><code>hitRatio</code>\u306f\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b9\u30e9\u30c3\u30b7\u30f3\u30b0\u3092\u907f\u3051\u308b\u305f\u3081\u306b\u4f7f\u308f\u308c\u308b\u3002</p> <p>1.0\u672a\u6e80\u306e<code>hitRatio</code>\u306f\u3001\u4e26\u5217\u306aCUDA\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u7570\u306a\u308b<code>accessPolicyWindow</code>\u304cL2\u30ad\u30e3\u30c3\u30b7\u30e5\u3067\u30ad\u30e3\u30c3\u30b7\u30e5\u3067\u304d\u308b\u30c7\u30fc\u30bf\u91cf\u3092\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u3059\u308b\u305f\u3081\u306b\u4f7f\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u4f8b\u3048\u3070\u3001\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u304c16KB\u3067\u30012\u3064\u306e\u7570\u306a\u308bCUDA\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u4e26\u5217\u306a\u30ab\u30fc\u30cd\u30eb\u304c16KB\u306e<code>accessPolicyWindow</code>\u3092\u6301\u3061\u3001\u3069\u3061\u3089\u3082<code>hitRatio</code>\u304c1.0\u3068\u3059\u308b\u3068\u3001\u5171\u6709\u3059\u308bL2\u30ad\u30e3\u30c3\u30b7\u30e5\u3067\u7af6\u5408\u3057\u305f\u6642\u306b\u304a\u4e92\u3044\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u3092\u524a\u9664\u3059\u308b\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3057\u304b\u3057\u3001\u4e21\u65b9\u306e<code>hitRatio</code>\u304c0.5\u306a\u3089\u3001\u81ea\u5206\u81ea\u8eab\u3084\u304a\u4e92\u3044\u306e\u6301\u7d9a\u7684\u306a\u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u3092\u6d88\u3057\u306b\u304f\u304f\u306a\u308b\u3002</p>"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/#l2\u30a2\u30af\u30bb\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3","title":"L2\u30a2\u30af\u30bb\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3","text":"<p>3\u7a2e\u985e\u306e\u30a2\u30af\u30bb\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u304c\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u306e\u7570\u306a\u308b\u30c7\u30fc\u30bf\u3078\u306e\u30a2\u30af\u30bb\u30b9\u306b\u5bfe\u3057\u3066\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u3002</p> \u30a2\u30af\u30bb\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3 \u52b9\u679c <code>cudaAccessPropertyStreaming</code> L2\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u6b8b\u308a\u306b\u304f\u304f\u3059\u308b <code>cudaAccessPropertyPersisting</code> L2\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u6b8b\u308a\u3084\u3059\u304f\u3059\u308b <code>cudaAccessPropertyNormal</code> \u4ee5\u524d\u9069\u7528\u3055\u308c\u305f\u3001\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u901a\u5e38\u306e\u72b6\u614b\u306b\u623b\u3059 <p><code>cudaAccessPropertyPersisting</code>\u3092\u6301\u3064\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306f\u8981\u3089\u306a\u304f\u306a\u3063\u3066\u3082L2\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u6b8b\u308b\u305f\u3081\u3001\u5229\u7528\u53ef\u80fd\u306aL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u91cf\u304c\u6e1b\u3063\u3066\u3057\u307e\u3046\u3002\u305d\u306e\u305f\u3081\u3001<code>cudaAccessPropertyNormal</code>\u3067\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3002</p>"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/#l2\u6301\u7d9a\u306e\u4f8b","title":"L2\u6301\u7d9a\u306e\u4f8b","text":"<p>\u4ee5\u4e0b\u306e\u4f8b\u306f\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306eL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u53d6\u308a\u65b9\u3068CUDA\u30b9\u30c8\u30ea\u30fc\u30e0\u3092\u4f7f\u3063\u305fCUDA\u30ab\u30fc\u30cd\u30eb\u3067\u306e\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4f7f\u3044\u65b9\u3001\u305d\u3057\u3066\u305d\u306e\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30ea\u30bb\u30c3\u30c8\u65b9\u6cd5\u3092\u793a\u3059\u3002</p> <pre><code>cudaStream_t stream;\ncudaStreamCreate(&amp;stream);                                                                  // Create CUDA stream\n\ncudaDeviceProp prop;                                                                        // CUDA device properties variable\ncudaGetDeviceProperties( &amp;prop, device_id);                                                 // Query GPU properties\nsize_t size = min( int(prop.l2CacheSize * 0.75) , prop.persistingL2CacheMaxSize );\ncudaDeviceSetLimit( cudaLimitPersistingL2CacheSize, size);                                  // set-aside 3/4 of L2 cache for persisting accesses or the max allowed\n\nsize_t window_size = min(prop.accessPolicyMaxWindowSize, num_bytes);                        // Select minimum of user defined num_bytes and max window size.\n\ncudaStreamAttrValue stream_attribute;                                                       // Stream level attributes data structure\nstream_attribute.accessPolicyWindow.base_ptr  = reinterpret_cast&lt;void*&gt;(data1);               // Global Memory data pointer\nstream_attribute.accessPolicyWindow.num_bytes = window_size;                                // Number of bytes for persistence access\nstream_attribute.accessPolicyWindow.hitRatio  = 0.6;                                        // Hint for cache hit ratio\nstream_attribute.accessPolicyWindow.hitProp   = cudaAccessPropertyPersisting;               // Persistence Property\nstream_attribute.accessPolicyWindow.missProp  = cudaAccessPropertyStreaming;                // Type of access property on cache miss\n\ncudaStreamSetAttribute(stream, cudaStreamAttributeAccessPolicyWindow, &amp;stream_attribute);   // Set the attributes to a CUDA Stream\n\nfor(int i = 0; i &lt; 10; i++) {\n    cuda_kernelA&lt;&lt;&lt;grid_size,block_size,0,stream&gt;&gt;&gt;(data1);                                 // This data1 is used by a kernel multiple times\n}                                                                                           // [data1 + num_bytes) benefits from L2 persistence\ncuda_kernelB&lt;&lt;&lt;grid_size,block_size,0,stream&gt;&gt;&gt;(data1);                                     // A different kernel in the same stream can also benefit\n                                                                                            // from the persistence of data1\n\nstream_attribute.accessPolicyWindow.num_bytes = 0;                                          // Setting the window size to 0 disable it\ncudaStreamSetAttribute(stream, cudaStreamAttributeAccessPolicyWindow, &amp;stream_attribute);   // Overwrite the access policy attribute to a CUDA Stream\ncudaCtxResetPersistingL2Cache();                                                            // Remove any persistent lines in L2\n\ncuda_kernelC&lt;&lt;&lt;grid_size,block_size,0,stream&gt;&gt;&gt;(data2);                                     // data2 can now benefit from full L2 in normal mode\n</code></pre>"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/#l2\u30a2\u30af\u30bb\u30b9\u3092\u901a\u5e38\u3078\u30ea\u30bb\u30c3\u30c8","title":"L2\u30a2\u30af\u30bb\u30b9\u3092\u901a\u5e38\u3078\u30ea\u30bb\u30c3\u30c8","text":"<p>\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u65b9\u6cd5\u306f3\u3064\u3042\u308b\u3002</p> <ol> <li>\u4ee5\u524d\u306e\u6301\u7d9a\u7684\u306a\u30e1\u30e2\u30ea\u9818\u57df\u3092<code>cudaAccessPropertyNormal</code>\u30a2\u30af\u30bb\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u3067\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3002</li> <li><code>cudaCtxResetPersistingL2Cache()</code>\u3092\u547c\u3073\u51fa\u3057\u3066\u3001\u5168\u3066\u306e\u6301\u7d9a\u7684\u306aL2\u30ad\u30e3\u30c3\u30b7\u30e5\u30e9\u30a4\u30f3\u3092\u30ea\u30bb\u30c3\u30c8\u3059\u308b\u3002</li> <li>\u305f\u307e\u305f\u307e\u89e6\u3063\u3066\u3044\u306a\u3044\u30e9\u30a4\u30f3\u304c\u81ea\u52d5\u7684\u306b\u901a\u5e38\u306b\u623b\u308b\u3002\u81ea\u52d5\u3067\u623b\u308b\u306e\u306b\u3069\u308c\u304f\u3089\u3044\u6642\u9593\u304c\u304b\u304b\u308b\u304b\u308f\u304b\u3089\u306a\u3044\u306e\u3067\u975e\u63a8\u5968\u3002</li> </ol>"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/#\u53d6\u3063\u3066\u304a\u3044\u305fl2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4f7f\u7528\u7ba1\u7406","title":"\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u4f7f\u7528\u7ba1\u7406","text":"<p>\u7570\u306a\u308bCUDA\u30b9\u30c8\u30ea\u30fc\u30e0\u3067\u4e26\u5217\u306b\u5b9f\u884c\u3057\u3066\u3044\u308b\u8907\u6570\u306eCUDA\u30ab\u30fc\u30cd\u30eb\u306f\u81ea\u8eab\u306e\u30b9\u30c8\u30ea\u30fc\u30e0\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u3001\u7570\u306a\u308b\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u6301\u3064\u304b\u3082\u3057\u308c\u306a\u3044\u3002\u3057\u304b\u3057\u3001\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306f\u3053\u308c\u3089\u4e26\u5217\u3067\u5b9f\u884c\u3055\u308c\u3066\u3044\u308b\u5168\u3066\u306eCUDA\u30ab\u30fc\u30cd\u30eb\u306b\u5171\u6709\u3055\u308c\u308b\u3002\u3088\u3063\u3066\u3001\u6301\u7d9a\u7684\u306a\u30a2\u30af\u30bb\u30b9\u306e\u91cf\u304c\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5bb9\u91cf\u3092\u8d85\u3048\u305f\u5834\u5408\u3001\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u3092\u6301\u7d9a\u7684\u3068\u6307\u5b9a\u3057\u305f\u30e1\u30ea\u30c3\u30c8\u304c\u6d88\u3048\u308b\u3002</p> <p>\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5229\u7528\u3092\u7ba1\u7406\u3059\u308b\u305f\u3081\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f\u4ee5\u4e0b\u3092\u8003\u3048\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002 - \u53d6\u3063\u3066\u304a\u304fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba - \u4e26\u5217\u306b\u5b9f\u884c\u3059\u308b\u304b\u3082\u3057\u308c\u306a\u3044CUDA\u30ab\u30fc\u30cd\u30eb\u3068\u305d\u306e\u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u30a6\u30a3\u30f3\u30c9\u30a6 - \u901a\u5e38\u307e\u305f\u306f\u30b9\u30c8\u30ea\u30fc\u30df\u30f3\u30b0\u306a\u30a2\u30af\u30bb\u30b9\u304c\u4ee5\u524d\u53d6\u3063\u3066\u304a\u3044\u305fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u540c\u3058\u512a\u5148\u5ea6\u3067\u4f7f\u3048\u308b\u3088\u3046\u306b\u3001\u3044\u3064\u3001\u3069\u306e\u3088\u3046\u306aL2\u30ea\u30bb\u30c3\u30c8\u304c\u5fc5\u8981\u304b\u3002</p>"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/#l2\u30ad\u30e3\u30c3\u30b7\u30e5\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30af\u30a8\u30ea","title":"L2\u30ad\u30e3\u30c3\u30b7\u30e5\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u30af\u30a8\u30ea","text":"<p>L2\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u95a2\u9023\u3057\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u306f<code>cudaDeviceProp</code>\u69cb\u9020\u4f53\u306e\u4e00\u90e8\u306b\u3042\u308a\u3001<code>cudaGetDeviceProperties</code>\u95a2\u6570\u3067\u53d6\u5f97\u3067\u304d\u308b\u3002</p> <p>CUDA\u30c7\u30d0\u30a4\u30b9\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u4ee5\u4e0b\u3092\u542b\u3080\u3002</p> \u30d7\u30ed\u30d1\u30c6\u30a3\u540d \u610f\u5473 <code>l2CacheSize</code> GPU\u4e0a\u3067\u5229\u7528\u53ef\u80fd\u306aL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u5bb9\u91cf <code>persistingL2CacheMaxSize</code> \u6301\u7d9a\u7684\u306a\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306b\u53d6\u3063\u3066\u304a\u3051\u308bL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u6700\u5927\u5bb9\u91cf <code>accessPolicyMaxWindowSize</code> \u30a2\u30af\u30bb\u30b9\u30dd\u30ea\u30b7\u30fc\u30a6\u30a3\u30f3\u30c9\u30a6\u306e\u6700\u5927\u30b5\u30a4\u30ba"},{"location":"programming_interface/cuda_runtime/device_memory_l2_access_management/#\u6301\u7d9a\u7684\u306a\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306b\u53d6\u3063\u3066\u304a\u304fl2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba\u306e\u7ba1\u7406","title":"\u6301\u7d9a\u7684\u306a\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306b\u53d6\u3063\u3066\u304a\u304fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba\u306e\u7ba1\u7406","text":"<p>\u6301\u7d9a\u7684\u306a\u30e1\u30e2\u30ea\u30a2\u30af\u30bb\u30b9\u306e\u305f\u3081\u306b\u53d6\u3063\u3066\u304a\u304fL2\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u30b5\u30a4\u30ba\u306f<code>cudaDeviceGetLimit</code>\u95a2\u6570\u3092\u4f7f\u3063\u3066\u53d6\u5f97\u3067\u304d\u3001<code>cudaDeviceSetLimit</code>\u95a2\u6570\u306bcudaLimit\u3068\u3057\u3066\u6e21\u3059\u3053\u3068\u3067\u8a2d\u5b9a\u3067\u304d\u308b\u3002\u6700\u5927\u5024\u306f<code>cudaDeviceProp::persistingL2CacheMaxSize</code>\u3002</p> <pre><code>enum cudaLimit {\n    /* other fields not shown */\n    cudaLimitPersistingL2CacheSize\n};\n</code></pre>"},{"location":"programming_interface/cuda_runtime/distributed_shared_memory/","title":"\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea","text":"<p>Compute capability 9.0\u3067\u5c0e\u5165\u3055\u308c\u305f\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u306b\u3088\u3063\u3066\u3001\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u306e\u30b9\u30ec\u30c3\u30c9\u306f\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u306e\u5168\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u5171\u6709\u30e1\u30e2\u30ea\u306b\u30a2\u30af\u30bb\u30b9\u51fa\u6765\u308b\u3088\u3046\u306b\u306a\u3063\u305f\u3002\u3053\u306e\u5206\u5272\u3055\u308c\u305f\u5171\u6709\u30e1\u30e2\u30ea\u3092\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3068\u547c\u3073\u3001\u5bfe\u5fdc\u3059\u308b\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3092\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u3068\u547c\u3076\u3002\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u5185\u306e\u30b9\u30ec\u30c3\u30c9\u306f\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u306e\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u304c\u81ea\u8eab\u304c\u5c5e\u3059\u308b\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u304b\u4ed6\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u304b\u306b\u95a2\u308f\u3089\u305a\u3001\u305d\u306e\u30e1\u30e2\u30ea\u3078\u306e\u8aad\u307f\u66f8\u304d\u3068\u4e0d\u53ef\u5206\u64cd\u4f5c\u3092\u884c\u3046\u3053\u3068\u304c\u51fa\u6765\u308b\u3002\u30ab\u30fc\u30cd\u30eb\u304c\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3092\u4f7f\u3046\u304b\u3069\u3046\u304b\u306b\u95a2\u308f\u3089\u305a\u3001\u5171\u6709\u30e1\u30e2\u30ea\u306e\u30b5\u30a4\u30ba\u6307\u5b9a(\u9759\u7684\u304b\u52d5\u7684\u304b)\u306f\u672a\u3060\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u6bce\u3067\u3042\u308b\u3002\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u306e\u30b5\u30a4\u30ba\u306f(\u30af\u30e9\u30b9\u30bf\u30fc\u6bce\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u6570) * (\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u6bce\u306e\u5171\u6709\u30e1\u30e2\u30ea\u306e\u30b5\u30a4\u30ba)\u3067\u3042\u308b\u3002</p> <p>\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u5185\u306e\u30c7\u30fc\u30bf\u3078\u30a2\u30af\u30bb\u30b9\u3059\u308b\u306b\u306f\u3001\u5168\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u304c\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002\u30e6\u30fc\u30b6\u30fc\u306f\u30af\u30e9\u30b9\u30bf\u30fc\u30b0\u30eb\u30fc\u30d7API\u306e<code>cluster.sync()</code>\u3092\u4f7f\u3046\u3068\u3001\u5168\u3066\u306e\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u304c\u5b9f\u884c\u3092\u958b\u59cb\u3057\u305f\u3053\u3068\u3092\u4fdd\u8a3c\u3067\u304d\u308b\u3002\u307e\u305f\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u5168\u3066\u306e\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3078\u306e\u64cd\u4f5c\u304c\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u304c\u7d42\u308f\u308b\u524d\u306b\u884c\u308f\u308c\u308b\u3053\u3068\u3082\u4fdd\u8a3c\u3057\u306a\u3051\u308c\u3070\u306a\u3089\u306a\u3044\u3002</p> <p>\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u30af\u30e9\u30b9\u30bf\u30fc\u3092\u4f7f\u3063\u305f\u3001GPU\u4e0a\u3067\u306e\u5358\u7d14\u306a\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u8a08\u7b97\u306e\u6700\u9069\u5316\u306e\u4ed5\u65b9\u3092\u898b\u3066\u307f\u3088\u3046\u3002\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u8a08\u7b97\u306e\u6a19\u6e96\u7684\u306a\u65b9\u6cd5\u306f\u5404\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306e\u5171\u6709\u30e1\u30e2\u30ea\u3067\u8a08\u7b97\u3057\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u3067\u4e0d\u53ef\u5206\u64cd\u4f5c\u3092\u884c\u3046\u65b9\u6cd5\u3067\u3042\u308b\u3002\u3053\u306e\u65b9\u6cd5\u306e\u9650\u754c\u306f\u5171\u6709\u30e1\u30e2\u30ea\u306e\u5bb9\u91cf\u3067\u3042\u308b\u3002\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u30d3\u30f3(\u7e26\u68d2)\u304c\u5171\u6709\u30e1\u30e2\u30ea\u306b\u53ce\u307e\u3089\u306a\u304f\u306a\u308b\u3068\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u4e0a\u3067\u4e0d\u53ef\u5206\u64cd\u4f5c\u3092\u3057\u306a\u304c\u3089\u76f4\u63a5\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u8a08\u7b97\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3092\u4f7f\u3046\u3068\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u30d3\u30f3\u306e\u6570\u306b\u3088\u308b\u304c\u3001\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u5171\u6709\u30e1\u30e2\u30ea\u3084\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3001\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u3067\u8a08\u7b97\u3067\u304d\u308b\u3002</p> <p>\u4ee5\u4e0b\u306eCUDA\u30ab\u30fc\u30cd\u30eb\u306f\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u306e\u30d3\u30f3\u306e\u6570\u306b\u3088\u3063\u3066\u3001\u5171\u6709\u30e1\u30e2\u30ea\u304b\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3067\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u8a08\u7b97\u3059\u308b\u3084\u308a\u65b9\u3092\u793a\u3057\u3066\u3044\u308b\u3002</p> /src/programming_interface/distributed_shared_memory/histogram.cu<pre><code>#include &lt;cooperative_groups.h&gt;\n\n/*\n * \u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u3092\u7528\u3044\u3066\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u3092\u8a08\u7b97\u3059\u308b\u30ab\u30fc\u30cd\u30eb\n *\n * \u65b9\u91dd:\n * \u5168\u3066\u306e\u30d3\u30f3\u3092\u5404\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u3067\u5206\u3051\u3066\u5171\u6709\u30e1\u30e2\u30ea\u306b\u4fdd\u6301\u3057\u3001\u8a08\u7b97\u304c\u5168\u90e8\u7d42\u308f\u3063\u305f\u3089\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u306b\u66f8\u304d\u8fbc\u3080\u3002\n * \u5165\u529b\u306f\u30b9\u30ec\u30c3\u30c9\u6570\u3067mod\u3092\u53d6\u308a\u3001\u81ea\u8eab\u306e\u30b9\u30ec\u30c3\u30c9ID\u306e\u540c\u5024\u985e\u306e\u305d\u308c\u305e\u308c\u306e\u5024\u3092\u914d\u5217\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3068\u898b\u3066\u30d3\u30f3\u306b\u8db3\u3059\u3002\n*/\n__global__ void clusterHist_kernel(\n    int *bins,\n    const int nbins,\n    const int bins_per_block,\n    const int *__restrict__ input,\n    size_t array_size\n) {\n  // \u5171\u6709\u30e1\u30e2\u30ea\u3092\u52d5\u7684\u306b\u78ba\u4fdd\u3059\u308b\u305f\u3081\u3001extern\u5ba3\u8a00\u3059\u308b\n  extern __shared__ int smem[];\n\n  namespace cg = cooperative_groups;\n\n  int tid = cg::this_grid().thread_rank();\n\n  // Cluster initialization, size and calculating local bin offsets.\n  cg::cluster_group cluster = cg::this_cluster();\n  int cluster_size = cluster.dim_blocks().x;\n\n  for (int i = threadIdx.x; i &lt; bins_per_block; i += blockDim.x)\n  {\n    smem[i] = 0; //Initialize shared memory histogram to zeros\n  }\n\n  // cluster synchronization ensures that shared memory is initialized to zero in\n  // all thread blocks in the cluster. It also ensures that all thread blocks\n  // have started executing and they exist concurrently.\n  cluster.sync();\n\n  for (int i = tid; i &lt; array_size; i += blockDim.x * gridDim.x)\n  {\n    int ldata = input[i];\n\n    //Find the right histogram bin.\n    int binid = ldata;\n    if (ldata &lt; 0) {\n      binid = 0;\n    } else if (ldata &gt;= nbins) {\n      binid = nbins - 1;\n    }\n\n    //Find destination block rank and offset for computing\n    //distributed shared memory histogram\n    int dst_block_rank = (int)(binid / bins_per_block);\n    int dst_offset = binid % bins_per_block;\n\n    //Pointer to target block shared memory\n    int *dst_smem = cluster.map_shared_rank(smem, dst_block_rank);\n\n    //Perform atomic update of the histogram bin\n    atomicAdd(dst_smem + dst_offset, 1);\n  }\n\n  // cluster synchronization is required to ensure all distributed shared\n  // memory operations are completed and no thread block exits while\n  // other thread blocks are still accessing distributed shared memory\n  cluster.sync();\n\n  // Perform global memory histogram, using the local distributed memory histogram\n  for (int i = threadIdx.x; i &lt; bins_per_block; i += blockDim.x)\n  {\n    atomicAdd(&amp;bins[i], smem[i]);\n  }\n}\n</code></pre> <p>\u4e0a\u306e\u30ab\u30fc\u30cd\u30eb\u306f\u5fc5\u8981\u306a\u5206\u6563\u5171\u6709\u30e1\u30e2\u30ea\u306e\u7dcf\u91cf\u306b\u5fdc\u3058\u305f\u30af\u30e9\u30b9\u30bf\u30fc\u30b5\u30a4\u30ba\u3092\u6301\u3063\u3066\u5b9f\u884c\u6642\u306b\u958b\u59cb\u3067\u304d\u308b\u3002\u3082\u3057\u30d2\u30b9\u30c8\u30b0\u30e9\u30e0\u304c1\u30d6\u30ed\u30c3\u30af\u5206\u306e\u5171\u6709\u30e1\u30e2\u30ea\u306b\u53ce\u307e\u308b\u307b\u3069\u5341\u5206\u5c0f\u3055\u3044\u306a\u3089\u3001\u30e6\u30fc\u30b6\u30fc\u306f\u30af\u30e9\u30b9\u30bf\u30fc\u6570\u30921\u306b\u3057\u3066\u30ab\u30fc\u30cd\u30eb\u3092\u958b\u59cb\u3067\u304d\u308b\u3002\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u306f\u5fc5\u8981\u306a\u5171\u6709\u30e1\u30e2\u30ea\u6570\u306b\u5fdc\u3058\u3066\u52d5\u7684\u306b\u30af\u30e9\u30b9\u30bf\u30fc\u30ab\u30fc\u30cd\u30eb\u3092\u958b\u59cb\u3059\u308b\u65b9\u6cd5\u3092\u793a\u3059\u3002</p> /src/programming_interface/distributed_shared_memory/histogram.cu<pre><code>  constexpr int array_size = 64;\n  constexpr int threads_per_block = 16;\n  constexpr int nbins = 16;\n\n  cudaLaunchConfig_t config = {0};\n  config.gridDim = array_size / threads_per_block;\n  config.blockDim = threads_per_block;\n\n  // cluster_size depends on the histogram size.\n  // ( cluster_size == 1 ) implies no distributed shared memory,\n  // just thread block local shared memory\n  int cluster_size = 2; // size 2 is an example here\n  int nbins_per_block = nbins / cluster_size;\n\n  //dynamic shared memory size is per block.\n  //Distributed shared memory size =  cluster_size * nbins_per_block * sizeof(int)\n  config.dynamicSmemBytes = nbins_per_block * sizeof(int);\n\n  // \u52d5\u7684\u5171\u6709\u30e1\u30e2\u30ea\u306e\u6700\u5927\u30b5\u30a4\u30ba\u3092\u5909\u66f4\n  auto e = cudaFuncSetAttribute(\n    (void *)clusterHist_kernel,\n    cudaFuncAttributeMaxDynamicSharedMemorySize,\n    config.dynamicSmemBytes\n  );\n  assert(e == cudaSuccess);\n\n  cudaLaunchAttribute attribute[1];\n  attribute[0].id = cudaLaunchAttributeClusterDimension;\n  attribute[0].val.clusterDim.x = cluster_size;\n  attribute[0].val.clusterDim.y = 1;\n  attribute[0].val.clusterDim.z = 1;\n\n  config.numAttrs = 1;\n  config.attrs = attribute;\n\n  int* dev_bins;\n\n  e = cudaMalloc(&amp;dev_bins, nbins * sizeof(int));\n  assert(e == cudaSuccess);\n\n  std::vector&lt;int&gt; input;\n  std::random_device seed_gen;\n  std::mt19937 engine(seed_gen());\n\n  // \u7bc4\u56f2\u5916\u306e\u30c1\u30a7\u30c3\u30af\u3092\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u308f\u3056\u3068\u7bc4\u56f2\u5916\u3092\u751f\u6210\u3059\u308b\u3088\u3046\u306b\u6307\u5b9a\n  std::uniform_int_distribution&lt;int&gt; dist(-1, nbins);\n\n  for (std::size_t i = 0; i &lt; array_size; ++i) {\n    input.push_back(dist(engine));\n  }\n\n  int* dev_input;\n  e = cudaMalloc(&amp;dev_input, input.size() * sizeof(int));\n  assert(e == cudaSuccess);\n\n  e = cudaMemcpy(dev_input, input.data(), input.size() * sizeof(int), cudaMemcpyHostToDevice);\n  assert(e == cudaSuccess);\n\n  e = cudaLaunchKernelEx(\n    &amp;config,\n    clusterHist_kernel,\n    dev_bins,\n    nbins,\n    nbins_per_block,\n    dev_input,\n    array_size\n  );\n  assert(e == cudaSuccess);\n</code></pre>"},{"location":"programming_interface/cuda_runtime/initialization/","title":"\u521d\u671f\u5316","text":"<p>CUDA 12.0\u304b\u3089\u3001cudaInitDevice\u95a2\u6570\u3068cudaSetDevice\u95a2\u6570\u306f\u6307\u5b9a\u3055\u308c\u305f\u30c7\u30d0\u30a4\u30b9\u306b\u7d10\u4ed8\u3044\u305f\u3001\u30e9\u30f3\u30bf\u30a4\u30e0\u3068\u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u521d\u671f\u5316\u3059\u308b\u3002 \u3053\u308c\u3089\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u304c\u306a\u3044\u3068\u3001\u4ed6\u306e\u30e9\u30f3\u30bf\u30a4\u30e0API\u30ea\u30af\u30a8\u30b9\u30c8\u3092\u51e6\u7406\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u6642\u306b\u30e9\u30f3\u30bf\u30a4\u30e0\u306f\u6697\u306b\u30c7\u30d0\u30a4\u30b9<code>0</code>\u3092\u4f7f\u3044\u3001\u81ea\u8eab\u3092\u521d\u671f\u5316\u3059\u308b\u3002 \u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u306e\u6642\u9593\u8a08\u6e2c\u3068\u30e9\u30f3\u30bf\u30a4\u30e0\u3078\u306e\u6700\u521d\u306e\u95a2\u6570\u547c\u3073\u51fa\u3057\u304b\u3089\u306e\u30a8\u30e9\u30fc\u30b3\u30fc\u30c9\u3092\u89e3\u91c8\u3059\u308b\u3068\u304d\u306b\u5fc3\u306b\u7559\u3081\u3066\u304a\u304f\u5fc5\u8981\u304c\u3042\u308b\u3002 12.0\u4ee5\u524d\u3067\u306f\u3001<code>cudaSetDevice</code>\u95a2\u6570\u306f\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u521d\u671f\u5316\u305b\u305a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306f(\u6642\u9593\u8a08\u6e2c\u3068\u30a8\u30e9\u30fc\u30cf\u30f3\u30c9\u30ea\u30f3\u30b0\u306e\u305f\u3081\u306b)\u4ed6\u306eAPI\u547c\u3073\u51fa\u3057\u304b\u3089\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u521d\u671f\u5316\u3092\u5207\u308a\u96e2\u3059\u3001\u4f55\u3082\u3057\u306a\u3044\u95a2\u6570\u547c\u3073\u51fa\u3057<code>cudaFree(0)</code>\u3092\u3088\u304f\u4f7f\u3063\u3066\u3044\u305f\u3002</p> <p>compute capability\u304c2.0\u4ee5\u4e0a\u306e\u30c7\u30d0\u30a4\u30b9\u306e\u6570\u306fcudaGetDeviceCount\u95a2\u6570\u3067\u308f\u304b\u308b\u3002\u30c7\u30d0\u30a4\u30b9\u756a\u53f7\u306f0\u304b\u3089\u59cb\u307e\u308a\u3001\u30c7\u30d0\u30a4\u30b9\u6570\u672a\u6e80\u307e\u3067\u3067\u3042\u308b\u3002</p> <p>\u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306f\u3001\u78ba\u4fdd\u3055\u308c\u305f\u30e1\u30e2\u30ea\u306e\u30ea\u30b9\u30c8\u3084\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3092\u542b\u3080\u3001\u30ed\u30fc\u30c9\u3055\u308c\u305f\u30e2\u30b8\u30e5\u30fc\u30eb\u306a\u3069\u30c7\u30d0\u30a4\u30b9\u3092\u5236\u5fa1\u3059\u308b\u30c7\u30fc\u30bf\u5168\u3066\u3092\u6301\u3064<sup>1</sup>\u3002 \u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306f\u30c7\u30d0\u30a4\u30b9\u6bce\u306b1\u3064\u3057\u304b\u306a\u304f\u3001CUDA\u30e9\u30f3\u30bf\u30a4\u30e0API\u3068\u5171\u6709\u3055\u308c\u308b\u3002 \u3064\u307e\u308a\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u3059\u3079\u3066\u306e\u30db\u30b9\u30c8\u30b9\u30ec\u30c3\u30c9\u3067\u5171\u6709\u3055\u308c\u308b\u3002 \u3053\u306e\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u4f5c\u6210\u3059\u308b\u6642\u3001\u5fc5\u8981\u306a\u3089\u30c7\u30d0\u30a4\u30b9\u30b3\u30fc\u30c9\u3092just-in-time\u30b3\u30f3\u30d1\u30a4\u30eb\u3059\u308b\u3002 \u8a73\u3057\u304f\u306f\u3001\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u306b\u3066\u3002</p> <p>\u30db\u30b9\u30c8\u30b9\u30ec\u30c3\u30c9\u304ccudaDeviceReset\u95a2\u6570\u3092\u547c\u3073\u51fa\u3057\u305f\u5834\u5408\u3001\u30db\u30b9\u30c8\u30b9\u30ec\u30c3\u30c9\u304c\u73fe\u5728\u64cd\u4f5c\u3057\u3066\u3044\u308b\u30c7\u30d0\u30a4\u30b9\u306e\u30d7\u30e9\u30a4\u30de\u30ea\u30fc\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u3092\u7834\u68c4\u3059\u308b\u3002</p> <p>\u6ce8</p> <p>CUDA\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u306f\u30db\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb\u6642\u306b\u521d\u671f\u5316\u3055\u308c\u3001\u30db\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u7d42\u4e86\u6642\u306b\u7834\u68c4\u3055\u308c\u308b\u30b0\u30ed\u30fc\u30d0\u30eb\u306a\u72b6\u614b\u3092\u6301\u3064\u3002CUDA\u30e9\u30f3\u30bf\u30a4\u30e0\u3068\u30c9\u30e9\u30a4\u30d0\u30fc\u306f\u3053\u306e\u72b6\u614b\u304c\u7121\u52b9\u304b\u3069\u3046\u304b\u3092\u691c\u51fa\u3067\u304d\u306a\u3044\u306e\u3067\u3001\u660e\u793a\u7684\u304b\u6697\u9ed9\u7684\u304b\u306b\u95a2\u308f\u3089\u305a\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u958b\u59cb\u6642\u3068\u7d42\u4e86\u6642\u306b\u3053\u308c\u3089\u306e\u30a4\u30f3\u30bf\u30fc\u30d5\u30a7\u30a4\u30b9\u3092\u4f7f\u3046\u3068\u672a\u5b9a\u7fa9\u52d5\u4f5c\u306b\u306a\u308b\u3002</p> <p>CUDA 12.0\u6642\u70b9\u3067\u306f\u3001<code>cudaSetDevice()</code>\u306f\u30db\u30b9\u30c8\u30b9\u30ec\u30c3\u30c9\u306e\u73fe\u5728\u306e\u30c7\u30d0\u30a4\u30b9\u3092\u5909\u66f4\u5f8c\u306b\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u660e\u793a\u7684\u306b\u521d\u671f\u5316\u3059\u308b\u3002 \u4ee5\u524d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306eCUDA\u3067\u306f\u3001<code>cudaSetDevice()</code>\u304c\u547c\u3073\u51fa\u3055\u308c\u3066\u304b\u3089\u521d\u3081\u3066\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u95a2\u6570\u304c\u547c\u3070\u308c\u308b\u307e\u3067\u3001\u65b0\u3057\u3044\u30c7\u30d0\u30a4\u30b9\u4e0a\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u306e\u521d\u671f\u5316\u3092\u9045\u5ef6\u3057\u3066\u3044\u305f\u3002 \u3053\u306e\u5909\u66f4\u306b\u3088\u308a\u3001\u521d\u671f\u5316\u306e\u30a8\u30e9\u30fc\u3092<code>cudaSetDevice()</code>\u306e\u623b\u308a\u5024\u3067\u78ba\u8a8d\u3059\u308b\u3053\u3068\u304c\u3068\u3066\u3082\u91cd\u8981\u306b\u306a\u3063\u305f\u3002 \u30a8\u30e9\u30fc\u51e6\u7406\u3068\u30d0\u30fc\u30b8\u30e7\u30f3\u7ba1\u7406\u306e\u30e9\u30f3\u30bf\u30a4\u30e0\u95a2\u6570\u306f\u30e9\u30f3\u30bf\u30a4\u30e0\u3092\u521d\u671f\u5316\u3057\u306a\u3044\u3002</p>"},{"location":"programming_interface/cuda_runtime/initialization/#\u4f8b","title":"\u4f8b","text":"/src/programming_interface/initialization/main.cu<pre><code>#include &lt;cassert&gt;\n\n#include &lt;cuda_runtime.h&gt;\n\nint main() {\n  // Instruct CUDA to yield its thread when waiting for results from the device.\n  unsigned int device_flags = cudaDeviceScheduleYield;\n  // Tell the CUDA runtime that DeviceFlags is being set in cudaInitDevice call\n  unsigned int flags = cudaInitDeviceFlagsAreValid;\n  // Initialize device to be used for GPU executions.\n  auto e = cudaInitDevice(0, device_flags, flags);\n  assert(e == cudaSuccess);\n\n  // Set device to be used for GPU executions.\n  e = cudaSetDevice(0);\n  assert(e == cudaSuccess);\n\n  int device;\n  e = cudaGetDevice(&amp;device);\n  assert(e == cudaSuccess);\n  assert(device == 0);\n\n  unsigned int current_flags;\n  e = cudaGetDeviceFlags(&amp;current_flags);\n  assert(e == cudaSuccess);\n  // Flags returned by this function may specifically include cudaDeviceMapHost\n  // even though it is not accepted by cudaSetDeviceFlags because it is implicit\n  // in runtime API flags.\n  assert((current_flags &amp; device_flags) == device_flags);\n}\n</code></pre> <ol> <li> <p>What is a CUDA context? \u21a9</p> </li> </ol>"},{"location":"programming_interface/cuda_runtime/page_locked_host_memory/","title":"\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u3055\u308c\u305f\u30db\u30b9\u30c8\u30e1\u30e2\u30ea","text":"<p>CUDA\u30e9\u30f3\u30bf\u30a4\u30e0\u306f\u3001(<code>malloc()</code>\u306b\u3088\u3063\u3066\u78ba\u4fdd\u3055\u308c\u305f\u3001\u666e\u901a\u306e\u30da\u30fc\u30b8\u30f3\u30b0\u53ef\u80fd\u306a\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u3068\u306f\u53cd\u5bfe\u306b\u3001)\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u3055\u308c\u305f(\u307e\u305f\u306f\u30d4\u30f3\u3055\u308c\u305f)\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u3092\u4f7f\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u95a2\u6570\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002\u4f8b\u3048\u3070\u3001</p> <ul> <li><code>cudaHostAlloc()</code>\u3068<code>cudaFreeHost()</code>\u306f\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u3055\u308c\u305f\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u306e\u78ba\u4fdd\u3068\u89e3\u653e\u3092\u884c\u3046\u3002</li> <li><code>cudaHostRegister()</code>\u306f<code>malloc()</code>\u306b\u3088\u3063\u3066\u78ba\u4fdd\u3055\u308c\u305f\u3001\u3042\u308b\u7bc4\u56f2\u306e\u30e1\u30e2\u30ea\u3092\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u3059\u308b\u3002(\u305f\u3060\u3057\u3001\u5236\u9650\u304c\u3042\u308b\u6a21\u69d8\u3002\u8a73\u3057\u304f\u306f\u30ea\u30d5\u30a1\u30ec\u30f3\u30b9\u30de\u30cb\u30e5\u30a2\u30eb\u3092\u53c2\u7167\u3002)</li> </ul> <p>\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u3055\u308c\u305f\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u306e\u4f7f\u7528\u306b\u306f\u3044\u304f\u3064\u304b\u5229\u70b9\u304c\u3042\u308b\u3002</p> <ul> <li>\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u3055\u308c\u305f\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u3068\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u9593\u306e\u30b3\u30d4\u30fc\u3092\u975e\u540c\u671f\u4e26\u5217\u5b9f\u884c\u3067\u8ff0\u3079\u308b\u3088\u3046\u306b\u3001\u30c7\u30d0\u30a4\u30b9\u306b\u5bfe\u3059\u308b\u30ab\u30fc\u30cd\u30eb\u306e\u5b9f\u884c\u3068\u4e26\u5217\u306b\u884c\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002</li> <li>\u3042\u308b\u30c7\u30d0\u30a4\u30b9\u3067\u306f\u3001\u30da\u30fc\u30b8\u30ed\u30c3\u30af\u3055\u308c\u305f\u30db\u30b9\u30c8\u30e1\u30e2\u30ea\u306f\u30c7\u30d0\u30a4\u30b9\u306e\u30a2\u30c9\u30ec\u30b9\u7a7a\u9593\u306b\u30de\u30c3\u30d7\u3055\u308c\u3046\u308b\u3002\u3053\u308c\u306b\u3088\u3063\u3066\u30c7\u30d0\u30a4\u30b9\u30e1\u30e2\u30ea\u3068\u306e\u30b3\u30d4\u30fc\u3092\u7121\u304f\u3059\u3053\u3068\u304c\u3067\u304d\u308b\u3002\u8a73\u3057\u304f\u306f\u30de\u30c3\u30d7\u3055\u308c\u305f\u30e1\u30e2\u30ea\u3092\u53c2\u7167\u3002</li> </ul>"},{"location":"programming_interface/cuda_runtime/shared_memory/","title":"\u5171\u6709\u30e1\u30e2\u30ea","text":"<p>\u30e1\u30e2\u30ea\u7a7a\u9593\u6307\u5b9a\u5b50\u3067\u8a73\u3057\u304f\u8ff0\u3079\u308b\u304c\u3001\u5171\u6709\u30e1\u30e2\u30ea\u306f<code>__shared__</code>\u30e1\u30e2\u30ea\u7a7a\u9593\u6307\u5b9a\u5b50\u3092\u4f7f\u3063\u3066\u78ba\u4fdd\u3055\u308c\u308b\u3002</p> <p>\u5171\u6709\u30e1\u30e2\u30ea\u306f\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u3088\u308a\u304b\u306a\u308a\u65e9\u3044\u3068\u3055\u308c\u3001CUDA\u30d6\u30ed\u30c3\u30af\u306b\u3088\u308b\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u3078\u306e\u30a2\u30af\u30bb\u30b9\u3092\u6700\u5c0f\u5316\u3059\u308b\u305f\u3081\u306e\u30b9\u30af\u30e9\u30c3\u30c1\u30d1\u30c3\u30c9\u30e1\u30e2\u30ea\u3068\u3057\u3066\u4f7f\u3048\u308b\u3002</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u4f8b\u306f\u5171\u6709\u30e1\u30e2\u30ea\u3092\u6d3b\u7528\u3057\u306a\u3044\u884c\u5217\u7a4d\u306e\u5b9f\u88c5\u3067\u3042\u308b\u3002\u5404\u30b9\u30ec\u30c3\u30c9\u306fA\u306e\u3042\u308b\u884c\u3068B\u306e\u3042\u308b\u5217\u3092\u8aad\u3093\u3067\u3001\u5bfe\u5fdc\u3059\u308bC\u306e\u8981\u7d20\u3092\u8a08\u7b97\u3059\u308b\u3002\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u3001A\u306e\u5404\u884c\u306fB\u306e\u5217\u6570\u3060\u3051\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u304b\u3089\u8aad\u307e\u308c\u3001B\u306e\u5404\u884c\u3082A\u306e\u884c\u6570\u3060\u3051\u8aad\u307e\u308c\u308b\u3002</p> /src/programming_interface/shared_memory/not_using_shared_memory.cu<pre><code>// Thread block size\n#define BLOCK_SIZE 16\n\n// Matrices are stored in row-major order:\n// M(row, col) = *(M.elements + row * M.width + col)\nstruct Matrix {\n  int    width;\n  int    height;\n  float* elements;\n};\n\n// Forward declaration of the matrix multiplication kernel\n__global__ void MatMulKernel(const Matrix, const Matrix, Matrix);\n\n// Matrix multiplication - Host code\n// Matrix dimensions are assumed to be multiples of BLOCK_SIZE\nvoid MatMul(const Matrix A, const Matrix B, Matrix C) {\n  // Load A and B to device memory\n  Matrix d_A;\n  d_A.width   = A.width;\n  d_A.height  = A.height;\n  size_t size = A.width * A.height * sizeof(float);\n  cudaMalloc(&amp;d_A.elements, size);\n  cudaMemcpy(d_A.elements, A.elements, size, cudaMemcpyHostToDevice);\n  Matrix d_B;\n  d_B.width  = B.width;\n  d_B.height = B.height;\n  size       = B.width * B.height * sizeof(float);\n  cudaMalloc(&amp;d_B.elements, size);\n  cudaMemcpy(d_B.elements, B.elements, size, cudaMemcpyHostToDevice);\n\n  // Allocate C in device memory\n  Matrix d_C;\n  d_C.width  = C.width;\n  d_C.height = C.height;\n  size       = C.width * C.height * sizeof(float);\n  cudaMalloc(&amp;d_C.elements, size);\n\n  // Invoke kernel\n  dim3 dimBlock(BLOCK_SIZE, BLOCK_SIZE);\n  dim3 dimGrid(B.width / dimBlock.x, A.height / dimBlock.y);\n  MatMulKernel&lt;&lt;&lt;dimGrid, dimBlock&gt;&gt;&gt;(d_A, d_B, d_C);\n\n  // Read C from device memory\n  cudaMemcpy(C.elements, d_C.elements, size, cudaMemcpyDeviceToHost);\n\n  // Free device memory\n  cudaFree(d_A.elements);\n  cudaFree(d_B.elements);\n  cudaFree(d_C.elements);\n}\n\n// Matrix multiplication kernel called by MatMul()\n// Calculate C = A * B\n__global__ void MatMulKernel(Matrix A, Matrix B, Matrix C) {\n  // Each thread computes one element of C\n  // by accumulating results into Cvalue\n  float Cvalue = 0;\n  int   row    = blockIdx.y * blockDim.y + threadIdx.y;\n  int   col    = blockIdx.x * blockDim.x + threadIdx.x;\n  for (int e = 0; e &lt; A.width; ++e)\n    Cvalue += A.elements[row * A.width + e] * B.elements[e * B.width + col];\n  C.elements[row * C.width + col] = Cvalue;\n}\n</code></pre> <p> \u5171\u6709\u30e1\u30e2\u30ea\u3092\u4f7f\u308f\u306a\u3044\u884c\u5217\u7a4d</p> <p>\u4ee5\u4e0b\u306e\u30b3\u30fc\u30c9\u4f8b\u306f\u5171\u6709\u30e1\u30e2\u30ea\u3092\u6d3b\u7528\u3057\u305f\u884c\u5217\u7a4d\u306e\u5b9f\u88c5\u3067\u3042\u308b\u3002\u3053\u306e\u5b9f\u88c5\u3067\u306f\u3001\u5404\u30b9\u30ec\u30c3\u30c9\u30d6\u30ed\u30c3\u30af\u306fC\u306e\u3042\u308b\u6b63\u65b9\u90e8\u5206\u884c\u5217Csub\u3092\u8a08\u7b97\u3057\u3001\u305d\u306e\u30d6\u30ed\u30c3\u30af\u306e\u5404\u30b9\u30ec\u30c3\u30c9\u306fCsub\u306e\u5404\u8981\u7d20\u3092\u8a08\u7b97\u3059\u308b\u3002\u4ee5\u4e0b\u306e\u56f3\u306e\u3088\u3046\u306b\u3001Csub\u306f\u6b21\u5143\u304c(\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba, A\u306e\u5217\u6570)\u306eA\u306e\u90e8\u5206\u884c\u5217\u3068\u6b21\u5143\u304c(B\u306e\u884c\u6570, \u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba)\u306eB\u306e\u90e8\u5206\u884c\u5217\u306e\u7a4d\u3067\u8a08\u7b97\u3067\u304d\u308b\u306e\u3067\u3001\u3053\u306e2\u3064\u306e\u90e8\u5206\u884c\u5217\u3092\u30b0\u30ed\u30fc\u30d0\u30eb\u30e1\u30e2\u30ea\u304b\u3089\u5171\u6709\u30e1\u30e2\u30ea\u306b\u30ed\u30fc\u30c9\u3059\u308c\u3070A\u306e\u5404\u884c\u306f(B\u306e\u5217\u6570) / (\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba)\u3060\u3051\u3001B\u306e\u5404\u884c\u306f(A\u306e\u884c\u6570) / (\u30d6\u30ed\u30c3\u30af\u30b5\u30a4\u30ba)\u3060\u3051\u8aad\u3081\u3070\u3088\u3044\u3002</p> /src/programming_interface/shared_memory/using_shared_memory.cu<pre><code>// Thread block size\n#define BLOCK_SIZE 16\n\n// Matrices are stored in row-major order:\n// M(row, col) = *(M.elements + row * M.stride + col)\nstruct Matrix {\n  int    width;\n  int    height;\n  int    stride;\n  float* elements;\n};\n\n// Get a matrix element\n__device__ float GetElement(const Matrix A, int row, int col) {\n  return A.elements[row * A.stride + col];\n}\n\n// Set a matrix element\n__device__ void SetElement(Matrix A, int row, int col, float value) {\n  A.elements[row * A.stride + col] = value;\n}\n\n// Get the BLOCK_SIZExBLOCK_SIZE sub-matrix Asub of A that is\n// located col sub-matrices to the right and row sub-matrices down\n// from the upper-left corner of A\n__device__ Matrix GetSubMatrix(Matrix A, int row, int col) {\n  Matrix Asub;\n  Asub.width    = BLOCK_SIZE;\n  Asub.height   = BLOCK_SIZE;\n  Asub.stride   = A.stride;\n  Asub.elements = &amp;A.elements[A.stride * BLOCK_SIZE * row + BLOCK_SIZE * col];\n  return Asub;\n}\n\n// Forward declaration of the matrix multiplication kernel\n__global__ void MatMulKernel(const Matrix, const Matrix, Matrix);\n\n// Matrix multiplication - Host code\n// Matrix dimensions are assumed to be multiples of BLOCK_SIZE\nvoid MatMul(const Matrix A, const Matrix B, Matrix C) {\n  // Load A and B to device memory\n  Matrix d_A;\n  d_A.width = d_A.stride = A.width;\n  d_A.height             = A.height;\n  size_t size            = A.width * A.height * sizeof(float);\n  cudaMalloc(&amp;d_A.elements, size);\n  cudaMemcpy(d_A.elements, A.elements, size, cudaMemcpyHostToDevice);\n\n  Matrix d_B;\n  d_B.width = d_B.stride = B.width;\n  d_B.height             = B.height;\n  size                   = B.width * B.height * sizeof(float);\n  cudaMalloc(&amp;d_B.elements, size);\n  cudaMemcpy(d_B.elements, B.elements, size, cudaMemcpyHostToDevice);\n\n  // Allocate C in device memory\n  Matrix d_C;\n  d_C.width = d_C.stride = C.width;\n  d_C.height             = C.height;\n  size                   = C.width * C.height * sizeof(float);\n  cudaMalloc(&amp;d_C.elements, size);\n\n  // Invoke kernel\n  dim3 dimBlock(BLOCK_SIZE, BLOCK_SIZE);\n  dim3 dimGrid(B.width / dimBlock.x, A.height / dimBlock.y);\n  MatMulKernel&lt;&lt;&lt;dimGrid, dimBlock&gt;&gt;&gt;(d_A, d_B, d_C);\n\n  // Read C from device memory\n  cudaMemcpy(C.elements, d_C.elements, size, cudaMemcpyDeviceToHost);\n\n  // Free device memory\n  cudaFree(d_A.elements);\n  cudaFree(d_B.elements);\n  cudaFree(d_C.elements);\n}\n\n// Matrix multiplication kernel called by MatMul()\n__global__ void MatMulKernel(Matrix A, Matrix B, Matrix C) {\n  // Block row and column\n  int blockRow = blockIdx.y;\n  int blockCol = blockIdx.x;\n\n  // Each thread block computes one sub-matrix Csub of C\n  Matrix Csub = GetSubMatrix(C, blockRow, blockCol);\n\n  // Each thread computes one element of Csub\n  // by accumulating results into Cvalue\n  float Cvalue = 0;\n\n  // Thread row and column within Csub\n  int row = threadIdx.y;\n  int col = threadIdx.x;\n\n  // Loop over all the sub-matrices of A and B that are\n  // required to compute Csub\n  // Multiply each pair of sub-matrices together\n  // and accumulate the results\n  for (int m = 0; m &lt; (A.width / BLOCK_SIZE); ++m) {\n    // Get sub-matrix Asub of A\n    Matrix Asub = GetSubMatrix(A, blockRow, m);\n\n    // Get sub-matrix Bsub of B\n    Matrix Bsub = GetSubMatrix(B, m, blockCol);\n\n    // Shared memory used to store Asub and Bsub respectively\n    __shared__ float As[BLOCK_SIZE][BLOCK_SIZE];\n    __shared__ float Bs[BLOCK_SIZE][BLOCK_SIZE];\n\n    // Load Asub and Bsub from device memory to shared memory\n    // Each thread loads one element of each sub-matrix\n    As[row][col] = GetElement(Asub, row, col);\n    Bs[row][col] = GetElement(Bsub, row, col);\n\n    // Synchronize to make sure the sub-matrices are loaded\n    // before starting the computation\n    __syncthreads();\n\n    // Multiply Asub and Bsub together\n    for (int e = 0; e &lt; BLOCK_SIZE; ++e) {\n      Cvalue += As[row][e] * Bs[e][col];\n    }\n\n    // Synchronize to make sure that the preceding\n    // computation is done before loading two new\n    // sub-matrices of A and B in the next iteration\n    __syncthreads();\n  }\n  // Write Csub to device memory\n  // Each thread writes one element\n  SetElement(Csub, row, col, Cvalue);\n}\n</code></pre> <p> \u5171\u6709\u30e1\u30e2\u30ea\u3092\u4f7f\u3063\u305f\u884c\u5217\u7a4d</p>"}]}